{
    "sourceFile": "lib/day_selector.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 168,
            "patches": [
                {
                    "date": 1644579998419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1644580529021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,7 +9,10 @@\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container();\r\n+    return Container(\r\n+\r\n+      \r\n+    );\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644580786071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:flutter/material.dart';\r\n+import 'package:toggle_switch/toggle_switch.dart';\r\n \r\n class DaySelector extends StatefulWidget {\r\n   DaySelector({Key? key}) : super(key: key);\r\n \r\n@@ -9,10 +10,28 @@\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container(\r\n+    return Scaffold(\r\n+      body: Column(\r\n+        crossAxisAlignment: CrossAxisAlignment.center,\r\n+        children: [\r\n+          Row(\r\n\\ No newline at end of file\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            children: [\r\n \r\n-      \r\n+              // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n+ToggleSwitch(\r\n+  initialLabelIndex: 0,\r\n+  totalSwitches: 3,\r\n+  labels: ['America', 'Canada', 'Mexico'],\r\n+  onToggle: (index) {\r\n+    print('switched to: $index');\r\n+  },\r\n+),\r\n+            ],\r\n+          ),\r\n+        ],\r\n+      ),\r\n     );\r\n   }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1644580795588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,21 +17,20 @@\n         children: [\r\n           Row(\r\n             mainAxisAlignment: MainAxisAlignment.center,\r\n             children: [\r\n-\r\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n-ToggleSwitch(\r\n-  initialLabelIndex: 0,\r\n-  totalSwitches: 3,\r\n-  labels: ['America', 'Canada', 'Mexico'],\r\n-  onToggle: (index) {\r\n-    print('switched to: $index');\r\n-  },\r\n-),\r\n+              ToggleSwitch(\r\n+                initialLabelIndex: 0,\r\n+                totalSwitches: 3,\r\n+                labels: ['America', 'Canada', 'Mexico'],\r\n+                onToggle: (index) {\r\n+                  print('switched to: $index');\r\n+                },\r\n\\ No newline at end of file\n+              ),\r\n             ],\r\n           ),\r\n         ],\r\n       ),\r\n     );\r\n   }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1644581053737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             children: [\r\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n-                totalSwitches: 3,\r\n+                totalSwitches: 1,\r\n                 labels: ['America', 'Canada', 'Mexico'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n                 },\r\n@@ -32,5 +32,5 @@\n         ],\r\n       ),\r\n     );\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1644581074679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n                 totalSwitches: 1,\r\n-                labels: ['America', 'Canada', 'Mexico'],\r\n+                labels: ['Sunday'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n                 },\r\n               ),\r\n"
                },
                {
                    "date": 1644581174741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n             children: [\r\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n+                cornerRadius: 1.0,\r\n                 totalSwitches: 1,\r\n                 labels: ['Sunday'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n"
                },
                {
                    "date": 1644581191988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,11 +20,11 @@\n             children: [\r\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n-                cornerRadius: 1.0,\r\n+                cornerRadius: 4.0,\r\n                 totalSwitches: 1,\r\n-                labels: ['Sunday'],\r\n+                labels: ['Sun'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n                 },\r\n               ),\r\n"
                },
                {
                    "date": 1644581213977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n                 cornerRadius: 4.0,\r\n+                borderWidth: 1.0,\r\n                 totalSwitches: 1,\r\n                 labels: ['Sun'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n"
                },
                {
                    "date": 1644581242731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,12 @@\n             children: [\r\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n-                cornerRadius: 4.0,\r\n+                cornerRadius: 5.0,\r\n                 borderWidth: 1.0,\r\n                 totalSwitches: 1,\r\n-                labels: ['Sun'],\r\n+                labels: ['S'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n                 },\r\n               ),\r\n"
                },
                {
                    "date": 1644581261480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n                 cornerRadius: 5.0,\r\n-                borderWidth: 1.0,\r\n+                borderWidth: 8.0,\r\n                 totalSwitches: 1,\r\n                 labels: ['S'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n"
                },
                {
                    "date": 1644581394110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,10 @@\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n                 cornerRadius: 5.0,\r\n                 borderWidth: 8.0,\r\n+                minWidth: 12.0,\r\n+                minHeight: 12.0,\r\n                 totalSwitches: 1,\r\n                 labels: ['S'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n"
                },
                {
                    "date": 1644581413197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n                 cornerRadius: 5.0,\r\n                 borderWidth: 8.0,\r\n-                minWidth: 12.0,\r\n-                minHeight: 12.0,\r\n+                minWidth: 20.0,\r\n+                minHeight: 20.0,\r\n                 totalSwitches: 1,\r\n                 labels: ['S'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n"
                },
                {
                    "date": 1644581433590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             children: [\r\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n-                cornerRadius: 5.0,\r\n+                cornerRadius: 15.0,\r\n                 borderWidth: 8.0,\r\n                 minWidth: 20.0,\r\n                 minHeight: 20.0,\r\n                 totalSwitches: 1,\r\n"
                },
                {
                    "date": 1644581444951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             children: [\r\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n-                cornerRadius: 15.0,\r\n+               \r\n                 borderWidth: 8.0,\r\n                 minWidth: 20.0,\r\n                 minHeight: 20.0,\r\n                 totalSwitches: 1,\r\n"
                },
                {
                    "date": 1644581498878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n                \r\n                 borderWidth: 8.0,\r\n-                minWidth: 20.0,\r\n-                minHeight: 20.0,\r\n+                minWidth: 30.0,\r\n+                minHeight: 30.0,\r\n                 totalSwitches: 1,\r\n                 labels: ['S'],\r\n                 onToggle: (index) {\r\n                   print('switched to: $index');\r\n"
                },
                {
                    "date": 1644581513657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n               // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n               ToggleSwitch(\r\n                 initialLabelIndex: 0,\r\n                \r\n-                borderWidth: 8.0,\r\n+              //  borderWidth: 8.0,\r\n                 minWidth: 30.0,\r\n                 minHeight: 30.0,\r\n                 totalSwitches: 1,\r\n                 labels: ['S'],\r\n"
                },
                {
                    "date": 1644581533878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,30 +11,32 @@\n class _DaySelectorState extends State<DaySelector> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n-      body: Column(\r\n-        crossAxisAlignment: CrossAxisAlignment.center,\r\n-        children: [\r\n-          Row(\r\n-            mainAxisAlignment: MainAxisAlignment.center,\r\n-            children: [\r\n-              // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n-              ToggleSwitch(\r\n-                initialLabelIndex: 0,\r\n-               \r\n-              //  borderWidth: 8.0,\r\n-                minWidth: 30.0,\r\n-                minHeight: 30.0,\r\n-                totalSwitches: 1,\r\n-                labels: ['S'],\r\n-                onToggle: (index) {\r\n-                  print('switched to: $index');\r\n-                },\r\n-              ),\r\n-            ],\r\n-          ),\r\n-        ],\r\n+      body: Center(\r\n+        child: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.center,\r\n+          children: [\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.center,\r\n+              children: [\r\n+                // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n+                ToggleSwitch(\r\n+                  initialLabelIndex: 0,\r\n+                 \r\n+                //  borderWidth: 8.0,\r\n+                  minWidth: 30.0,\r\n+                  minHeight: 30.0,\r\n+                  totalSwitches: 1,\r\n+                  labels: ['S'],\r\n+                  onToggle: (index) {\r\n+                    print('switched to: $index');\r\n+                  },\r\n+                ),\r\n+              ],\r\n+            ),\r\n+          ],\r\n+        ),\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644581650202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import 'package:flutter/material.dart';\r\n import 'package:toggle_switch/toggle_switch.dart';\r\n \r\n class DaySelector extends StatefulWidget {\r\n-  DaySelector({Key? key}) : super(key: key);\r\n+  final labelText; \r\n+  DaySelector({Key? key, required this.labelText}) : super(key: key);\r\n \r\n   @override\r\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n"
                },
                {
                    "date": 1644581888473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,18 @@\n import 'package:flutter/material.dart';\r\n import 'package:toggle_switch/toggle_switch.dart';\r\n \r\n class DaySelector extends StatefulWidget {\r\n-  final labelText; \r\n+  final String  labelText; \r\n   DaySelector({Key? key, required this.labelText}) : super(key: key);\r\n \r\n   @override\r\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n+\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n@@ -27,9 +29,9 @@\n                 //  borderWidth: 8.0,\r\n                   minWidth: 30.0,\r\n                   minHeight: 30.0,\r\n                   totalSwitches: 1,\r\n-                  labels: ['S'],\r\n+                  labels: [widget.labelText],\r\n                   onToggle: (index) {\r\n                     print('switched to: $index');\r\n                   },\r\n                 ),\r\n"
                },
                {
                    "date": 1644582175240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,15 @@\n import 'package:flutter/material.dart';\r\n import 'package:toggle_switch/toggle_switch.dart';\r\n \r\n class DaySelector extends StatefulWidget {\r\n-  final String  labelText; \r\n-  DaySelector({Key? key, required this.labelText}) : super(key: key);\r\n+  DaySelector({Key? key}) : super(key: key);\r\n \r\n   @override\r\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n-\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n@@ -21,25 +18,34 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               children: [\r\n-                // Here, default theme colors are used for activeBgColor, activeFgColor, inactiveBgColor and inactiveFgColor\r\n-                ToggleSwitch(\r\n-                  initialLabelIndex: 0,\r\n-                 \r\n-                //  borderWidth: 8.0,\r\n-                  minWidth: 30.0,\r\n-                  minHeight: 30.0,\r\n-                  totalSwitches: 1,\r\n-                  labels: [widget.labelText],\r\n-                  onToggle: (index) {\r\n-                    print('switched to: $index');\r\n-                  },\r\n-                ),\r\n+                daySelection('sun'),\r\n+                daySelection('sun'),\r\n+                daySelection('sun'),\r\n+                daySelection('sun'),\r\n+                daySelection('sun'),\r\n+                daySelection('sun'),\r\n+                daySelection('sun'),\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n+\r\n+  Widget daySelection(String labelText) {\r\n+    return ToggleSwitch(\r\n+      initialLabelIndex: 0,\r\n+\r\n+      //  borderWidth: 8.0,\r\n+      minWidth: 30.0,\r\n+      minHeight: 30.0,\r\n+      totalSwitches: 1,\r\n+      labels: [labelText],\r\n+      onToggle: (index) {\r\n+        print('switched to: $index');\r\n+      },\r\n+    );\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1644582219019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Row(\r\n+              mainAxisSize: MainAxisSize.max,\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               children: [\r\n                 daySelection('sun'),\r\n                 daySelection('sun'),\r\n"
                },
                {
                    "date": 1644582230975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n \r\n       //  borderWidth: 8.0,\r\n-      minWidth: 30.0,\r\n-      minHeight: 30.0,\r\n+      minWidth: 50.0,\r\n+      minHeight: 50.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n       onToggle: (index) {\r\n         print('switched to: $index');\r\n"
                },
                {
                    "date": 1644582247280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n \r\n-      //  borderWidth: 8.0,\r\n+      borderWidth: 8.0,\r\n       minWidth: 50.0,\r\n       minHeight: 50.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n"
                },
                {
                    "date": 1644582262812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n \r\n       borderWidth: 8.0,\r\n-      minWidth: 50.0,\r\n-      minHeight: 50.0,\r\n+      minWidth: 30.0,\r\n+      minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n       onToggle: (index) {\r\n         print('switched to: $index');\r\n"
                },
                {
                    "date": 1644582303806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,15 @@\n             Row(\r\n               mainAxisSize: MainAxisSize.max,\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               children: [\r\n-                daySelection('sun'),\r\n-                daySelection('sun'),\r\n-                daySelection('sun'),\r\n-                daySelection('sun'),\r\n-                daySelection('sun'),\r\n-                daySelection('sun'),\r\n-                daySelection('sun'),\r\n+                daySelection('S'),\r\n+                daySelection('M'),\r\n+                daySelection('T'),\r\n+                daySelection('W'),\r\n+                daySelection('T'),\r\n+                daySelection('F'),\r\n+                daySelection('s'),\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n"
                },
                {
                    "date": 1644582319123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n \r\n-      borderWidth: 8.0,\r\n+      borderWidth: 0.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n"
                },
                {
                    "date": 1644582334946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n \r\n-      borderWidth: 0.0,\r\n+      borderWidth: 1.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n"
                },
                {
                    "date": 1644582343236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n \r\n-      borderWidth: 1.0,\r\n+      borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n"
                },
                {
                    "date": 1644582357300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n-\r\n+cornerRadius: 5.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n"
                },
                {
                    "date": 1644582372075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n-cornerRadius: 5.0,\r\n+cornerRadius: 15.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n"
                },
                {
                    "date": 1644582378199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       initialLabelIndex: 0,\r\n-cornerRadius: 15.0,\r\n+cornerRadius: 5.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n"
                },
                {
                    "date": 1644582446095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n+      borderColor: [Colors.grey],\r\n       onToggle: (index) {\r\n         print('switched to: $index');\r\n       },\r\n     );\r\n"
                },
                {
                    "date": 1644582532378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n-      borderColor: [Colors.grey],\r\n+    inactiveBgColor: Colors.grey,\r\n       onToggle: (index) {\r\n         print('switched to: $index');\r\n       },\r\n     );\r\n"
                },
                {
                    "date": 1644582547962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,16 +36,17 @@\n   }\r\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n-      initialLabelIndex: 0,\r\n+      initialLabelIndex: 1,\r\n cornerRadius: 5.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n     inactiveBgColor: Colors.grey,\r\n+\r\n       onToggle: (index) {\r\n         print('switched to: $index');\r\n       },\r\n     );\r\n"
                },
                {
                    "date": 1644582645894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n       labels: [labelText],\r\n     inactiveBgColor: Colors.grey,\r\n-\r\n+curve: Curves.easeInToLinear ,\r\n       onToggle: (index) {\r\n         print('switched to: $index');\r\n       },\r\n     );\r\n"
                },
                {
                    "date": 1644582744444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n   }\r\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n+      changeOnTap: true,\r\n       initialLabelIndex: 1,\r\n cornerRadius: 5.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n"
                },
                {
                    "date": 1644582792106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n   }\r\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n-      changeOnTap: true,\r\n+      changeOnTap: false,\r\n       initialLabelIndex: 1,\r\n cornerRadius: 5.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n"
                },
                {
                    "date": 1644582814668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n   }\r\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n-      changeOnTap: false,\r\n+      changeOnTap: true,\r\n       initialLabelIndex: 1,\r\n cornerRadius: 5.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n"
                },
                {
                    "date": 1644582836664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   Widget daySelection(String labelText) {\r\n     return ToggleSwitch(\r\n       changeOnTap: true,\r\n-      initialLabelIndex: 1,\r\n+      initialLabelIndex: 0,\r\n cornerRadius: 5.0,\r\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n"
                },
                {
                    "date": 1644585312774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n       borderWidth: 5.0,\r\n       minWidth: 30.0,\r\n       minHeight: 30.0,\r\n       totalSwitches: 1,\r\n+      \r\n       labels: [labelText],\r\n     inactiveBgColor: Colors.grey,\r\n curve: Curves.easeInToLinear ,\r\n       onToggle: (index) {\r\n"
                },
                {
                    "date": 1644815372434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,5 +52,15 @@\n         print('switched to: $index');\r\n       },\r\n     );\r\n   }\r\n+\r\n+  Widget roundDaySelection(){\r\n+    return Container(\r\n+      height: MediaQuery.of(context).size.height*0.5,\r\n+      width: MediaQuery.of(context).size.width*0.5,\r\n+      decoration: BoxDecoration(borderRadius: BorderRadius.circular(15)),);\r\n+  }\r\n }\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1644815410748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,9 @@\n             Row(\r\n               mainAxisSize: MainAxisSize.max,\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               children: [\r\n-                daySelection('S'),\r\n-                daySelection('M'),\r\n-                daySelection('T'),\r\n-                daySelection('W'),\r\n-                daySelection('T'),\r\n-                daySelection('F'),\r\n-                daySelection('s'),\r\n+               roundDaySelection()\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n@@ -63,4 +57,11 @@\n }\r\n \r\n \r\n \r\n+//  daySelection('S'),\r\n+//                 daySelection('M'),\r\n+//                 daySelection('T'),\r\n+//                 daySelection('W'),\r\n+//                 daySelection('T'),\r\n+//                 daySelection('F'),\r\n+//                 daySelection('s'),\n\\ No newline at end of file\n"
                },
                {
                    "date": 1644815427787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n             Row(\r\n               mainAxisSize: MainAxisSize.max,\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               children: [\r\n-               roundDaySelection()\r\n+               roundDaySelection(),roundDaySelection(),roundDaySelection()\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n"
                },
                {
                    "date": 1644815482565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,10 +49,10 @@\n   }\r\n \r\n   Widget roundDaySelection(){\r\n     return Container(\r\n-      height: MediaQuery.of(context).size.height*0.5,\r\n-      width: MediaQuery.of(context).size.width*0.5,\r\n+      height: MediaQuery.of(context).size.height*0.1,\r\n+      width: MediaQuery.of(context).size.width*0.1,\r\n       decoration: BoxDecoration(borderRadius: BorderRadius.circular(15)),);\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1644816476397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,27 +28,9 @@\n       ),\r\n     );\r\n   }\r\n \r\n-  Widget daySelection(String labelText) {\r\n-    return ToggleSwitch(\r\n-      changeOnTap: true,\r\n-      initialLabelIndex: 0,\r\n-cornerRadius: 5.0,\r\n-      borderWidth: 5.0,\r\n-      minWidth: 30.0,\r\n-      minHeight: 30.0,\r\n-      totalSwitches: 1,\r\n-      \r\n-      labels: [labelText],\r\n-    inactiveBgColor: Colors.grey,\r\n-curve: Curves.easeInToLinear ,\r\n-      onToggle: (index) {\r\n-        print('switched to: $index');\r\n-      },\r\n-    );\r\n-  }\r\n-\r\n+//  \r\n   Widget roundDaySelection(){\r\n     return Container(\r\n       height: MediaQuery.of(context).size.height*0.1,\r\n       width: MediaQuery.of(context).size.width*0.1,\r\n@@ -63,5 +45,24 @@\n //                 daySelection('T'),\r\n //                 daySelection('W'),\r\n //                 daySelection('T'),\r\n //                 daySelection('F'),\r\n-//                 daySelection('s'),\n\\ No newline at end of file\n+//                 daySelection('s'),\r\n+\r\n+// Widget daySelection(String labelText) {\r\n+//     return ToggleSwitch(\r\n+//       changeOnTap: true,\r\n+//       initialLabelIndex: 0,\r\n+// cornerRadius: 5.0,\r\n+//       borderWidth: 5.0,\r\n+//       minWidth: 30.0,\r\n+//       minHeight: 30.0,\r\n+//       totalSwitches: 1,\r\n+      \r\n+//       labels: [labelText],\r\n+//     inactiveBgColor: Colors.grey,\r\n+// curve: Curves.easeInToLinear ,\r\n+//       onToggle: (index) {\r\n+//         print('switched to: $index');\r\n+//       },\r\n+//     );\r\n+//   }\r\n"
                },
                {
                    "date": 1644816507431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n   Widget roundDaySelection(){\r\n     return Container(\r\n       height: MediaQuery.of(context).size.height*0.1,\r\n       width: MediaQuery.of(context).size.width*0.1,\r\n+      color: Colors.pink,\r\n       decoration: BoxDecoration(borderRadius: BorderRadius.circular(15)),);\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1644816523260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,10 @@\n   Widget roundDaySelection(){\r\n     return Container(\r\n       height: MediaQuery.of(context).size.height*0.1,\r\n       width: MediaQuery.of(context).size.width*0.1,\r\n-      color: Colors.pink,\r\n-      decoration: BoxDecoration(borderRadius: BorderRadius.circular(15)),);\r\n+     \r\n+      decoration: BoxDecoration( color: Colors.pink, borderRadius: BorderRadius.circular(15)),);\r\n   }\r\n }\r\n \r\n \r\n"
                },
                {
                    "date": 1644816532831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     return Container(\r\n       height: MediaQuery.of(context).size.height*0.1,\r\n       width: MediaQuery.of(context).size.width*0.1,\r\n      \r\n-      decoration: BoxDecoration( color: Colors.pink, borderRadius: BorderRadius.circular(15)),);\r\n+      decoration: BoxDecoration( color: Colors.pink, borderRadius: BorderRadius.circular(5)),);\r\n   }\r\n }\r\n \r\n \r\n"
                },
                {
                    "date": 1644816544652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n \r\n //  \r\n   Widget roundDaySelection(){\r\n     return Container(\r\n-      height: MediaQuery.of(context).size.height*0.1,\r\n+      height: MediaQuery.of(context).size.height*0.04,\r\n       width: MediaQuery.of(context).size.width*0.1,\r\n      \r\n       decoration: BoxDecoration( color: Colors.pink, borderRadius: BorderRadius.circular(5)),);\r\n   }\r\n"
                },
                {
                    "date": 1644816582438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n //  \r\n   Widget roundDaySelection(){\r\n     return Container(\r\n       height: MediaQuery.of(context).size.height*0.04,\r\n-      width: MediaQuery.of(context).size.width*0.1,\r\n+      width: MediaQuery.of(context).size.width*0.04,\r\n      \r\n       decoration: BoxDecoration( color: Colors.pink, borderRadius: BorderRadius.circular(5)),);\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644816592891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n //  \r\n   Widget roundDaySelection(){\r\n     return Container(\r\n       height: MediaQuery.of(context).size.height*0.04,\r\n-      width: MediaQuery.of(context).size.width*0.04,\r\n+      width: MediaQuery.of(context).size.width*0.1,\r\n      \r\n       decoration: BoxDecoration( color: Colors.pink, borderRadius: BorderRadius.circular(5)),);\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644816705241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,29 +19,30 @@\n             Row(\r\n               mainAxisSize: MainAxisSize.max,\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               children: [\r\n-               roundDaySelection(),roundDaySelection(),roundDaySelection()\r\n+                roundDaySelection(),\r\n+                roundDaySelection(),\r\n+                roundDaySelection()\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n-//  \r\n-  Widget roundDaySelection(){\r\n+//\r\n+  Widget roundDaySelection() {\r\n     return Container(\r\n-      height: MediaQuery.of(context).size.height*0.04,\r\n-      width: MediaQuery.of(context).size.width*0.1,\r\n-     \r\n-      decoration: BoxDecoration( color: Colors.pink, borderRadius: BorderRadius.circular(5)),);\r\n+        height: MediaQuery.of(context).size.height * 0.04,\r\n+        width: MediaQuery.of(context).size.width * 0.1,\r\n+        decoration: BoxDecoration(\r\n+            color: Colors.pink,\r\n+            borderRadius: const BorderRadius.all(Radius.circular(20))));\r\n   }\r\n }\r\n \r\n-\r\n-\r\n //  daySelection('S'),\r\n //                 daySelection('M'),\r\n //                 daySelection('T'),\r\n //                 daySelection('W'),\r\n@@ -57,9 +58,9 @@\n //       borderWidth: 5.0,\r\n //       minWidth: 30.0,\r\n //       minHeight: 30.0,\r\n //       totalSwitches: 1,\r\n-      \r\n+\r\n //       labels: [labelText],\r\n //     inactiveBgColor: Colors.grey,\r\n // curve: Curves.easeInToLinear ,\r\n //       onToggle: (index) {\r\n"
                },
                {
                    "date": 1644816723827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \r\n //\r\n   Widget roundDaySelection() {\r\n     return Container(\r\n-        height: MediaQuery.of(context).size.height * 0.04,\r\n+        height: MediaQuery.of(context).size.height * 0.1,\r\n         width: MediaQuery.of(context).size.width * 0.1,\r\n         decoration: BoxDecoration(\r\n             color: Colors.pink,\r\n             borderRadius: const BorderRadius.all(Radius.circular(20))));\r\n"
                },
                {
                    "date": 1644816765599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,11 @@\n     return Container(\r\n         height: MediaQuery.of(context).size.height * 0.1,\r\n         width: MediaQuery.of(context).size.width * 0.1,\r\n         decoration: BoxDecoration(\r\n-            color: Colors.pink,\r\n-            borderRadius: const BorderRadius.all(Radius.circular(20))));\r\n+           shape: BoxShape.circle,\r\n+            color: Colors.pink\r\n+            //borderRadius: const BorderRadius.all(Radius.circular(20))));\r\n   }\r\n }\r\n \r\n //  daySelection('S'),\r\n"
                },
                {
                    "date": 1644816786429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,12 @@\n         width: MediaQuery.of(context).size.width * 0.1,\r\n         decoration: BoxDecoration(\r\n            shape: BoxShape.circle,\r\n             color: Colors.pink\r\n-            //borderRadius: const BorderRadius.all(Radius.circular(20))));\r\n+\r\n+            //borderRadius: const BorderRadius.all(Radius.circular(20))\r\n+            ),\r\n+            );\r\n   }\r\n }\r\n \r\n //  daySelection('S'),\r\n"
                },
                {
                    "date": 1644816816981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,15 +33,13 @@\n \r\n //\r\n   Widget roundDaySelection() {\r\n     return Container(\r\n-        height: MediaQuery.of(context).size.height * 0.1,\r\n-        width: MediaQuery.of(context).size.width * 0.1,\r\n-        decoration: BoxDecoration(\r\n+        height: MediaQuery.of(context).size.height * 0.06,\r\n+        width: MediaQuery.of(context).size.width * 0.06,\r\n+        decoration: const BoxDecoration(\r\n            shape: BoxShape.circle,\r\n             color: Colors.pink\r\n-\r\n-            //borderRadius: const BorderRadius.all(Radius.circular(20))\r\n             ),\r\n             );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644816870016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Row(\r\n-              mainAxisSize: MainAxisSize.max,\r\n+              mainAxisSize: MainAxisSize.min,\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               children: [\r\n                 roundDaySelection(),\r\n                 roundDaySelection(),\r\n@@ -33,10 +33,10 @@\n \r\n //\r\n   Widget roundDaySelection() {\r\n     return Container(\r\n-        height: MediaQuery.of(context).size.height * 0.06,\r\n-        width: MediaQuery.of(context).size.width * 0.06,\r\n+        height: MediaQuery.of(context).size.height * 0.07,\r\n+        width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration: const BoxDecoration(\r\n            shape: BoxShape.circle,\r\n             color: Colors.pink\r\n             ),\r\n"
                },
                {
                    "date": 1644816918752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,11 @@\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               mainAxisSize: MainAxisSize.min,\r\n-              mainAxisAlignment: MainAxisAlignment.center,\r\n+        \r\n               children: [\r\n                 roundDaySelection(),\r\n                 roundDaySelection(),\r\n                 roundDaySelection()\r\n"
                },
                {
                    "date": 1644816928785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,10 @@\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-              mainAxisSize: MainAxisSize.min,\r\n-        \r\n+              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+            \r\n               children: [\r\n                 roundDaySelection(),\r\n                 roundDaySelection(),\r\n                 roundDaySelection()\r\n@@ -34,15 +33,13 @@\n \r\n //\r\n   Widget roundDaySelection() {\r\n     return Container(\r\n-        height: MediaQuery.of(context).size.height * 0.07,\r\n-        width: MediaQuery.of(context).size.width * 0.07,\r\n-        decoration: const BoxDecoration(\r\n-           shape: BoxShape.circle,\r\n-            color: Colors.pink\r\n-            ),\r\n-            );\r\n+      height: MediaQuery.of(context).size.height * 0.07,\r\n+      width: MediaQuery.of(context).size.width * 0.07,\r\n+      decoration:\r\n+          const BoxDecoration(shape: BoxShape.circle, color: Colors.pink),\r\n+    );\r\n   }\r\n }\r\n \r\n //  daySelection('S'),\r\n"
                },
                {
                    "date": 1644816971083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n             \r\n               children: [\r\n                 roundDaySelection(),\r\n                 roundDaySelection(),\r\n-                roundDaySelection()\r\n+                roundDaySelection(),\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n@@ -31,14 +31,15 @@\n     );\r\n   }\r\n \r\n //\r\n-  Widget roundDaySelection() {\r\n+  Widget roundDaySelection(String labelText) {\r\n     return Container(\r\n       height: MediaQuery.of(context).size.height * 0.07,\r\n       width: MediaQuery.of(context).size.width * 0.07,\r\n       decoration:\r\n           const BoxDecoration(shape: BoxShape.circle, color: Colors.pink),\r\n+          child: Text(labelText),\r\n     );\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1644816989769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n             \r\n               children: [\r\n-                roundDaySelection(),\r\n-                roundDaySelection(),\r\n-                roundDaySelection(),\r\n+                roundDaySelection('s'),\r\n+                roundDaySelection('M'),\r\n+                roundDaySelection('T'),\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n"
                },
                {
                    "date": 1644817501679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n       height: MediaQuery.of(context).size.height * 0.07,\r\n       width: MediaQuery.of(context).size.width * 0.07,\r\n       decoration:\r\n           const BoxDecoration(shape: BoxShape.circle, color: Colors.pink),\r\n-          child: Text(labelText),\r\n+          child: Center(child: Text(labelText)),\r\n     );\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1644818231481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,16 @@\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-            \r\n               children: [\r\n-                roundDaySelection('s'),\r\n+                roundDaySelection('S'),\r\n                 roundDaySelection('M'),\r\n                 roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n               ],\r\n             ),\r\n           ],\r\n         ),\r\n@@ -37,9 +40,9 @@\n       height: MediaQuery.of(context).size.height * 0.07,\r\n       width: MediaQuery.of(context).size.width * 0.07,\r\n       decoration:\r\n           const BoxDecoration(shape: BoxShape.circle, color: Colors.pink),\r\n-          child: Center(child: Text(labelText)),\r\n+      child: Center(child: Text(labelText)),\r\n     );\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1644818528340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n+  bool isSelected = false;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n@@ -35,14 +36,22 @@\n   }\r\n \r\n //\r\n   Widget roundDaySelection(String labelText) {\r\n-    return Container(\r\n-      height: MediaQuery.of(context).size.height * 0.07,\r\n-      width: MediaQuery.of(context).size.width * 0.07,\r\n-      decoration:\r\n-          const BoxDecoration(shape: BoxShape.circle, color: Colors.pink),\r\n-      child: Center(child: Text(labelText)),\r\n+    return InkWell(\r\n+      onTap: () {\r\n+        setState(() {\r\n+                  isSelected != isSelected;\r\n+\r\n+        });\r\n+      },\r\n+      child: Container(\r\n+        height: MediaQuery.of(context).size.height * 0.07,\r\n+        width: MediaQuery.of(context).size.width * 0.07,\r\n+        decoration:\r\n+            const BoxDecoration(shape: BoxShape.circle, color: isSelected ?  Colors.pink : Colors.grey),\r\n+        child: Center(child: Text(labelText)),\r\n+      ),\r\n     );\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1644818761321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration:\r\n-            const BoxDecoration(shape: BoxShape.circle, color: isSelected ?  Colors.pink : Colors.grey),\r\n+            const BoxDecoration(shape: BoxShape.circle, color: false ?  Colors.pink : Colors.grey),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644818777156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration:\r\n-            const BoxDecoration(shape: BoxShape.circle, color: false ?  Colors.pink : Colors.grey),\r\n+            const BoxDecoration(shape: BoxShape.circle, color: true ?  Colors.pink : Colors.grey),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644818877872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,10 @@\n   }\r\n \r\n //\r\n   Widget roundDaySelection(String labelText) {\r\n+\r\n+    Color selectedColor=isSelected==true?Colors.pink:Colors.grey;\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n                   isSelected != isSelected;\r\n@@ -47,9 +49,9 @@\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration:\r\n-            const BoxDecoration(shape: BoxShape.circle, color: true ?  Colors.pink : Colors.grey),\r\n+            const BoxDecoration(shape: BoxShape.circle, color: selectedColor),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644818976779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration:\r\n-            const BoxDecoration(shape: BoxShape.circle, color: selectedColor),\r\n+             BoxDecoration(shape: BoxShape.circle, color: selectedColor),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644819006916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,8 @@\n   }\r\n \r\n //\r\n   Widget roundDaySelection(String labelText) {\r\n-\r\n-    Color selectedColor=isSelected==true?Colors.pink:Colors.grey;\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n                   isSelected != isSelected;\r\n@@ -49,9 +47,9 @@\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration:\r\n-             BoxDecoration(shape: BoxShape.circle, color: selectedColor),\r\n+           BoxDecoration(shape: BoxShape.circle, color: isSelected ?  Colors.pink : Colors.grey),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644819040311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,17 +39,17 @@\n   Widget roundDaySelection(String labelText) {\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n-                  isSelected != isSelected;\r\n-\r\n+          isSelected != isSelected;\r\n         });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n-        decoration:\r\n-           BoxDecoration(shape: BoxShape.circle, color: isSelected ?  Colors.pink : Colors.grey),\r\n+        decoration: BoxDecoration(\r\n+            shape: BoxShape.circle,\r\n+            color: isSelected ? Colors.pink : Colors.grey),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644819087512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   Widget roundDaySelection(String labelText) {\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n-          isSelected != isSelected;\r\n+          isSelected = true;\r\n         });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n"
                },
                {
                    "date": 1644819132724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,11 @@\n //\r\n   Widget roundDaySelection(String labelText) {\r\n     return InkWell(\r\n       onTap: () {\r\n-        setState(() {\r\n+        // setState(() {\r\n           isSelected = true;\r\n-        });\r\n+        // });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n"
                },
                {
                    "date": 1644819155989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,11 @@\n //\r\n   Widget roundDaySelection(String labelText) {\r\n     return InkWell(\r\n       onTap: () {\r\n-        // setState(() {\r\n+        setState(() {\r\n           isSelected = true;\r\n-        // });\r\n+        });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n"
                },
                {
                    "date": 1644819177308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   Widget roundDaySelection(String labelText) {\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n-          isSelected = true;\r\n+          isSelected =!isSelected ;\r\n         });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n"
                },
                {
                    "date": 1644819477602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,25 +19,25 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-                roundDaySelection('S'),\r\n-                roundDaySelection('M'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-              ],\r\n+                roundDaySelection('S',false ),\r\n+                roundDaySelection('M', false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+              ]\r\n             ),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n //\r\n-  Widget roundDaySelection(String labelText) {\r\n+  Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n           isSelected =!isSelected ;\r\n"
                },
                {
                    "date": 1644819492569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n-          isSelected =!isSelected ;\r\n+          isDaySelected =!isDaySelected ;\r\n         });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n"
                },
                {
                    "date": 1644819506369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration: BoxDecoration(\r\n             shape: BoxShape.circle,\r\n-            color: isSelected ? Colors.pink : Colors.grey),\r\n+            color: isDaySelected ? Colors.pink : Colors.grey),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644819534843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-                roundDaySelection('S',false ),\r\n+                roundDaySelection('S',true ),\r\n                 roundDaySelection('M', false),\r\n                 roundDaySelection('T',false),\r\n                 roundDaySelection('T',false),\r\n                 roundDaySelection('T',false),\r\n"
                },
                {
                    "date": 1644819628655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n-  bool isSelected = false;\r\n+  bool isSundaySelected = false;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n@@ -19,9 +19,9 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-                roundDaySelection('S',true ),\r\n+                roundDaySelection('S',isSundaySelected),\r\n                 roundDaySelection('M', false),\r\n                 roundDaySelection('T',false),\r\n                 roundDaySelection('T',false),\r\n                 roundDaySelection('T',false),\r\n"
                },
                {
                    "date": 1644819862346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n-  bool isSundaySelected = false;\r\n+  bool isSelected = false;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n@@ -19,37 +19,37 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-                roundDaySelection('S',isSundaySelected),\r\n-                roundDaySelection('M', false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n-              ]\r\n+                roundDaySelection('S'),\r\n+                roundDaySelection('M'),\r\n+                roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n+                roundDaySelection('T'),\r\n+              ],\r\n             ),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n //\r\n-  Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n+  Widget roundDaySelection(String labelText ,) {\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n-          isDaySelected =!isDaySelected ;\r\n+          isSelected =!isSelected ;\r\n         });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration: BoxDecoration(\r\n             shape: BoxShape.circle,\r\n-            color: isDaySelected ? Colors.pink : Colors.grey),\r\n+            color: isSelected ? Colors.pink : Colors.grey),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644819916240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n-  bool isSelected = false;\r\n+  bool isSundaySelected = false;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n@@ -19,37 +19,37 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-                roundDaySelection('S'),\r\n-                roundDaySelection('M'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-                roundDaySelection('T'),\r\n-              ],\r\n+                roundDaySelection('S',true ),\r\n+                roundDaySelection('M', false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+                roundDaySelection('T',false),\r\n+              ]\r\n             ),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n //\r\n-  Widget roundDaySelection(String labelText ,) {\r\n+  Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n     return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n-          isSelected =!isSelected ;\r\n+          isDaySelected =!isDaySelected ;\r\n         });\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n         decoration: BoxDecoration(\r\n             shape: BoxShape.circle,\r\n-            color: isSelected ? Colors.pink : Colors.grey),\r\n+            color: isDaySelected ? Colors.pink : Colors.grey),\r\n         child: Center(child: Text(labelText)),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644819925941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-                roundDaySelection('S',true ),\r\n+                roundDaySelection('S',isSundaySelected),\r\n                 roundDaySelection('M', false),\r\n                 roundDaySelection('T',false),\r\n                 roundDaySelection('T',false),\r\n                 roundDaySelection('T',false),\r\n"
                },
                {
                    "date": 1644819937563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n-  bool isSundaySelected = false;\r\n+  bool isSundaySelected = true;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n"
                },
                {
                    "date": 1644819944347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   State<DaySelector> createState() => _DaySelectorState();\r\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n-  bool isSundaySelected = true;\r\n+  bool isSundaySelected = false;\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n"
                },
                {
                    "date": 1644820128983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n   }\r\n \r\n //\r\n   Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n-    return InkWell(\r\n+final ValueChanged<bool> onSundayChanged;    return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n           isDaySelected =!isDaySelected ;\r\n         });\r\n"
                },
                {
                    "date": 1644820197450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n final ValueChanged<bool> onSundayChanged;    return InkWell(\r\n       onTap: () {\r\n         setState(() {\r\n           isDaySelected =!isDaySelected ;\r\n-        });\r\n+        },);\r\n       },\r\n       child: Container(\r\n         height: MediaQuery.of(context).size.height * 0.07,\r\n         width: MediaQuery.of(context).size.width * 0.07,\r\n"
                },
                {
                    "date": 1644820801180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,15 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-                roundDaySelection('S',isSundaySelected),\r\n-                roundDaySelection('M', false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n-                roundDaySelection('T',false),\r\n+DaySelector(),                // roundDaySelection('S',isSundaySelected),\r\n+                // roundDaySelection('M', false),\r\n+                // roundDaySelection('T',false),\r\n+                // roundDaySelection('T',false),\r\n+                // roundDaySelection('T',false),\r\n+                // roundDaySelection('T',false),\r\n+                // roundDaySelection('T',false),\r\n               ]\r\n             ),\r\n           ],\r\n         ),\r\n@@ -35,25 +35,23 @@\n     );\r\n   }\r\n \r\n //\r\n-  Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n-final ValueChanged<bool> onSundayChanged;    return InkWell(\r\n-      onTap: () {\r\n-        setState(() {\r\n-          isDaySelected =!isDaySelected ;\r\n-        },);\r\n-      },\r\n-      child: Container(\r\n-        height: MediaQuery.of(context).size.height * 0.07,\r\n-        width: MediaQuery.of(context).size.width * 0.07,\r\n-        decoration: BoxDecoration(\r\n-            shape: BoxShape.circle,\r\n-            color: isDaySelected ? Colors.pink : Colors.grey),\r\n-        child: Center(child: Text(labelText)),\r\n-      ),\r\n-    );\r\n-  }\r\n+//   Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n+// final ValueChanged<bool> isDaySelected;    return InkWell(\r\n+//       onTap: () {\r\n+//        isDaySelected(true);\r\n+//       },\r\n+//       child: Container(\r\n+//         height: MediaQuery.of(context).size.height * 0.07,\r\n+//         width: MediaQuery.of(context).size.width * 0.07,\r\n+//         decoration: BoxDecoration(\r\n+//             shape: BoxShape.circle,\r\n+//             color: isDaySelected ? Colors.pink : Colors.grey),\r\n+//         child: Center(child: Text(labelText)),\r\n+//       ),\r\n+//     );\r\n+//   }\r\n }\r\n \r\n //  daySelection('S'),\r\n //                 daySelection('M'),\r\n"
                },
                {
                    "date": 1644820995037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:clock_ui/widget/day_selector.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:toggle_switch/toggle_switch.dart';\r\n \r\n class DaySelector extends StatefulWidget {\r\n@@ -19,9 +20,16 @@\n           children: [\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n               children: [\r\n-DaySelector(),                // roundDaySelection('S',isSundaySelected),\r\n+DaySelectorWidget(labelText: 'M', isDaySelected: isSundaySelected,\r\n+dayColorChanged: (value) {\r\n+                          setState(() {\r\n+                            isSundaySelected = value;\r\n+                          });\r\n+                        },\r\n+\r\n+)   ,         // roundDaySelection('S',isSundaySelected),\r\n                 // roundDaySelection('M', false),\r\n                 // roundDaySelection('T',false),\r\n                 // roundDaySelection('T',false),\r\n                 // roundDaySelection('T',false),\r\n"
                },
                {
                    "date": 1644821082635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,34 +10,95 @@\n }\r\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n   bool isSundaySelected = false;\r\n+  bool isMondaySelected = false;\r\n+  bool isSundaySelected = false;\r\n+  bool isSundaySelected = false;\r\n+  bool isSundaySelected = false;\r\n+  bool isSundaySelected = false;\r\n+  bool isSundaySelected = false;\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-              children: [\r\n-DaySelectorWidget(labelText: 'M', isDaySelected: isSundaySelected,\r\n-dayColorChanged: (value) {\r\n-                          setState(() {\r\n-                            isSundaySelected = value;\r\n-                          });\r\n-                        },\r\n+            Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              )\r\n \r\n-)   ,         // roundDaySelection('S',isSundaySelected),\r\n-                // roundDaySelection('M', false),\r\n-                // roundDaySelection('T',false),\r\n-                // roundDaySelection('T',false),\r\n-                // roundDaySelection('T',false),\r\n-                // roundDaySelection('T',false),\r\n-                // roundDaySelection('T',false),\r\n-              ]\r\n-            ),\r\n+              // roundDaySelection('S',isSundaySelected),\r\n+              // roundDaySelection('M', false),\r\n+              // roundDaySelection('T',false),\r\n+              // roundDaySelection('T',false),\r\n+              // roundDaySelection('T',false),\r\n+              // roundDaySelection('T',false),\r\n+              // roundDaySelection('T',false),\r\n+            ]),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1644821091087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,13 @@\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n   bool isSundaySelected = false;\r\n   bool isMondaySelected = false;\r\n-  bool isSundaySelected = false;\r\n-  bool isSundaySelected = false;\r\n-  bool isSundaySelected = false;\r\n-  bool isSundaySelected = false;\r\n-  bool isSundaySelected = false;\r\n+  // bool isSundaySelected = false;\r\n+  // bool isSundaySelected = false;\r\n+  // bool isSundaySelected = false;\r\n+  // bool isSundaySelected = false;\r\n+  // bool isSundaySelected = false;\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n"
                },
                {
                    "date": 1644821116846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n                 },\r\n               ),\r\n               DaySelectorWidget(\r\n                 labelText: 'M',\r\n-                isDaySelected: isSundaySelected,\r\n+                isDaySelected: isMondaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n                     isSundaySelected = value;\r\n                   });\r\n"
                },
                {
                    "date": 1644821122207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\r\n               DaySelectorWidget(\r\n-                labelText: 'M',\r\n+                labelText: 'S',\r\n                 isDaySelected: isSundaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n                     isSundaySelected = value;\r\n"
                },
                {
                    "date": 1644821133909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n                 labelText: 'M',\r\n                 isDaySelected: isMondaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n-                    isSundaySelected = value;\r\n+                    isMondaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n               DaySelectorWidget(\r\n"
                },
                {
                    "date": 1644821148254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,53 +43,53 @@\n                     isMondaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'M',\r\n-                isDaySelected: isSundaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isSundaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'M',\r\n-                isDaySelected: isSundaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isSundaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'M',\r\n-                isDaySelected: isSundaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isSundaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'M',\r\n-                isDaySelected: isSundaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isSundaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'M',\r\n-                isDaySelected: isSundaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isSundaySelected = value;\r\n-                  });\r\n-                },\r\n-              )\r\n+              // DaySelectorWidget(\r\n+              //   labelText: 'M',\r\n+              //   isDaySelected: isSundaySelected,\r\n+              //   dayColorChanged: (value) {\r\n+              //     setState(() {\r\n+              //       isSundaySelected = value;\r\n+              //     });\r\n+              //   },\r\n+              // ),\r\n+              // DaySelectorWidget(\r\n+              //   labelText: 'M',\r\n+              //   isDaySelected: isSundaySelected,\r\n+              //   dayColorChanged: (value) {\r\n+              //     setState(() {\r\n+              //       isSundaySelected = value;\r\n+              //     });\r\n+              //   },\r\n+              // ),\r\n+              // DaySelectorWidget(\r\n+              //   labelText: 'M',\r\n+              //   isDaySelected: isSundaySelected,\r\n+              //   dayColorChanged: (value) {\r\n+              //     setState(() {\r\n+              //       isSundaySelected = value;\r\n+              //     });\r\n+              //   },\r\n+              // ),\r\n+              // DaySelectorWidget(\r\n+              //   labelText: 'M',\r\n+              //   isDaySelected: isSundaySelected,\r\n+              //   dayColorChanged: (value) {\r\n+              //     setState(() {\r\n+              //       isSundaySelected = value;\r\n+              //     });\r\n+              //   },\r\n+              // ),\r\n+              // DaySelectorWidget(\r\n+              //   labelText: 'M',\r\n+              //   isDaySelected: isSundaySelected,\r\n+              //   dayColorChanged: (value) {\r\n+              //     setState(() {\r\n+              //       isSundaySelected = value;\r\n+              //     });\r\n+              //   },\r\n+              // )\r\n \r\n               // roundDaySelection('S',isSundaySelected),\r\n               // roundDaySelection('M', false),\r\n               // roundDaySelection('T',false),\r\n"
                },
                {
                    "date": 1644821500309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import 'package:clock_ui/widget/day_selector.dart';\r\n+import 'package:clock_ui/widget/day_time_ui.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:toggle_switch/toggle_switch.dart';\r\n \r\n class DaySelector extends StatefulWidget {\r\n"
                },
                {
                    "date": 1644821758615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,13 @@\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n   bool isSundaySelected = false;\r\n   bool isMondaySelected = false;\r\n-  // bool isSundaySelected = false;\r\n-  // bool isSundaySelected = false;\r\n-  // bool isSundaySelected = false;\r\n-  // bool isSundaySelected = false;\r\n-  // bool isSundaySelected = false;\r\n+   bool isTuesdaySelected = false;\r\n+  bool isWednesdaySelected = false;\r\n+  bool isThursDaySelected = false;\r\n+  bool isFriDaySelected = false;\r\n+  bool isSaturDaySelected = false;\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n"
                },
                {
                    "date": 1644821819829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,30 +121,4 @@\n //     );\r\n //   }\r\n }\r\n \r\n-//  daySelection('S'),\r\n-//                 daySelection('M'),\r\n-//                 daySelection('T'),\r\n-//                 daySelection('W'),\r\n-//                 daySelection('T'),\r\n-//                 daySelection('F'),\r\n-//                 daySelection('s'),\r\n-\r\n-// Widget daySelection(String labelText) {\r\n-//     return ToggleSwitch(\r\n-//       changeOnTap: true,\r\n-//       initialLabelIndex: 0,\r\n-// cornerRadius: 5.0,\r\n-//       borderWidth: 5.0,\r\n-//       minWidth: 30.0,\r\n-//       minHeight: 30.0,\r\n-//       totalSwitches: 1,\r\n-\r\n-//       labels: [labelText],\r\n-//     inactiveBgColor: Colors.grey,\r\n-// curve: Curves.easeInToLinear ,\r\n-//       onToggle: (index) {\r\n-//         print('switched to: $index');\r\n-//       },\r\n-//     );\r\n-//   }\r\n"
                },
                {
                    "date": 1644821833844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,22 +103,7 @@\n       ),\r\n     );\r\n   }\r\n \r\n-//\r\n-//   Widget roundDaySelection(String labelText , bool isDaySelected) {\r\n-// final ValueChanged<bool> isDaySelected;    return InkWell(\r\n-//       onTap: () {\r\n-//        isDaySelected(true);\r\n-//       },\r\n-//       child: Container(\r\n-//         height: MediaQuery.of(context).size.height * 0.07,\r\n-//         width: MediaQuery.of(context).size.width * 0.07,\r\n-//         decoration: BoxDecoration(\r\n-//             shape: BoxShape.circle,\r\n-//             color: isDaySelected ? Colors.pink : Colors.grey),\r\n-//         child: Center(child: Text(labelText)),\r\n-//       ),\r\n-//     );\r\n-//   }\r\n+\r\n }\r\n \r\n"
                },
                {
                    "date": 1644821841729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,15 +89,9 @@\n               //     });\r\n               //   },\r\n               // )\r\n \r\n-              // roundDaySelection('S',isSundaySelected),\r\n-              // roundDaySelection('M', false),\r\n-              // roundDaySelection('T',false),\r\n-              // roundDaySelection('T',false),\r\n-              // roundDaySelection('T',false),\r\n-              // roundDaySelection('T',false),\r\n-              // roundDaySelection('T',false),\r\n+             \r\n             ]),\r\n           ],\r\n         ),\r\n       ),\r\n"
                },
                {
                    "date": 1644821978422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n class _DaySelectorState extends State<DaySelector> {\r\n   bool isSundaySelected = false;\r\n   bool isMondaySelected = false;\r\n-   bool isTuesdaySelected = false;\r\n+  bool isTuesdaySelected = false;\r\n   bool isWednesdaySelected = false;\r\n   bool isThursDaySelected = false;\r\n   bool isFriDaySelected = false;\r\n   bool isSaturDaySelected = false;\r\n@@ -43,61 +43,56 @@\n                     isMondaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n-              // DaySelectorWidget(\r\n-              //   labelText: 'M',\r\n-              //   isDaySelected: isSundaySelected,\r\n-              //   dayColorChanged: (value) {\r\n-              //     setState(() {\r\n-              //       isSundaySelected = value;\r\n-              //     });\r\n-              //   },\r\n-              // ),\r\n-              // DaySelectorWidget(\r\n-              //   labelText: 'M',\r\n-              //   isDaySelected: isSundaySelected,\r\n-              //   dayColorChanged: (value) {\r\n-              //     setState(() {\r\n-              //       isSundaySelected = value;\r\n-              //     });\r\n-              //   },\r\n-              // ),\r\n-              // DaySelectorWidget(\r\n-              //   labelText: 'M',\r\n-              //   isDaySelected: isSundaySelected,\r\n-              //   dayColorChanged: (value) {\r\n-              //     setState(() {\r\n-              //       isSundaySelected = value;\r\n-              //     });\r\n-              //   },\r\n-              // ),\r\n-              // DaySelectorWidget(\r\n-              //   labelText: 'M',\r\n-              //   isDaySelected: isSundaySelected,\r\n-              //   dayColorChanged: (value) {\r\n-              //     setState(() {\r\n-              //       isSundaySelected = value;\r\n-              //     });\r\n-              //   },\r\n-              // ),\r\n-              // DaySelectorWidget(\r\n-              //   labelText: 'M',\r\n-              //   isDaySelected: isSundaySelected,\r\n-              //   dayColorChanged: (value) {\r\n-              //     setState(() {\r\n-              //       isSundaySelected = value;\r\n-              //     });\r\n-              //   },\r\n-              // )\r\n-\r\n-             \r\n+              DaySelectorWidget(\r\n+                labelText: 'T',\r\n+                isDaySelected: isTuesdaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'W',\r\n+                isDaySelected: isWednesdaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'T',\r\n+                isDaySelected: isThursDaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'F',\r\n+                isDaySelected: isFriDaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'S',\r\n+                isDaySelected: isSaturDaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n             ]),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n-\r\n-\r\n }\r\n-\r\n"
                },
                {
                    "date": 1644822182996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,45 +48,45 @@\n                 labelText: 'T',\r\n                 isDaySelected: isTuesdaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n-                    isSundaySelected = value;\r\n+                    isTuesdaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n               DaySelectorWidget(\r\n                 labelText: 'W',\r\n                 isDaySelected: isWednesdaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n-                    isSundaySelected = value;\r\n+                    isWednesdaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n               DaySelectorWidget(\r\n                 labelText: 'T',\r\n                 isDaySelected: isThursDaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n-                    isSundaySelected = value;\r\n+                    isThursDaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n               DaySelectorWidget(\r\n                 labelText: 'F',\r\n                 isDaySelected: isFriDaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n-                    isSundaySelected = value;\r\n+                    isFriDaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n               DaySelectorWidget(\r\n                 labelText: 'S',\r\n                 isDaySelected: isSaturDaySelected,\r\n                 dayColorChanged: (value) {\r\n                   setState(() {\r\n-                    isSundaySelected = value;\r\n+                    isSaturDaySelected = value;\r\n                   });\r\n                 },\r\n               ),\r\n             ]),\r\n"
                },
                {
                    "date": 1644822967638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n       body: Center(\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n-            Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\r\n+            Row(\r\n+              crossAxisAlignment: CrossAxisAlignment.center,\r\n+              mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\r\n               DaySelectorWidget(\r\n                 labelText: 'S',\r\n                 isDaySelected: isSundaySelected,\r\n                 dayColorChanged: (value) {\r\n"
                },
                {
                    "date": 1644823323692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Center(\r\n         child: Column(\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Row(\r\n               crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1644823792273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n       body: Center(\r\n         child: Column(\r\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n+          \r\n           children: [\r\n+            Text(\"Set Day and Time\"),\r\n             Row(\r\n               crossAxisAlignment: CrossAxisAlignment.center,\r\n               mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\r\n               DaySelectorWidget(\r\n"
                },
                {
                    "date": 1644823975123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,80 +24,86 @@\n       body: Center(\r\n         child: Column(\r\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n-          \r\n           children: [\r\n             Text(\"Set Day and Time\"),\r\n-            Row(\r\n-              crossAxisAlignment: CrossAxisAlignment.center,\r\n-              mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\r\n-              DaySelectorWidget(\r\n-                labelText: 'S',\r\n-                isDaySelected: isSundaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isSundaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'M',\r\n-                isDaySelected: isMondaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isMondaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'T',\r\n-                isDaySelected: isTuesdaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isTuesdaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'W',\r\n-                isDaySelected: isWednesdaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isWednesdaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'T',\r\n-                isDaySelected: isThursDaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isThursDaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'F',\r\n-                isDaySelected: isFriDaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isFriDaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-              DaySelectorWidget(\r\n-                labelText: 'S',\r\n-                isDaySelected: isSaturDaySelected,\r\n-                dayColorChanged: (value) {\r\n-                  setState(() {\r\n-                    isSaturDaySelected = value;\r\n-                  });\r\n-                },\r\n-              ),\r\n-            ]),\r\n+          \r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n+\r\n+\r\n+  Widget daySelctionMethod(){\r\n+\r\n+    return   Row(\r\n+                crossAxisAlignment: CrossAxisAlignment.center,\r\n+                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+                children: [\r\n+                  DaySelectorWidget(\r\n+                    labelText: 'S',\r\n+                    isDaySelected: isSundaySelected,\r\n+                    dayColorChanged: (value) {\r\n+                      setState(() {\r\n+                        isSundaySelected = value;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                  DaySelectorWidget(\r\n+                    labelText: 'M',\r\n+                    isDaySelected: isMondaySelected,\r\n+                    dayColorChanged: (value) {\r\n+                      setState(() {\r\n+                        isMondaySelected = value;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                  DaySelectorWidget(\r\n+                    labelText: 'T',\r\n+                    isDaySelected: isTuesdaySelected,\r\n+                    dayColorChanged: (value) {\r\n+                      setState(() {\r\n+                        isTuesdaySelected = value;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                  DaySelectorWidget(\r\n+                    labelText: 'W',\r\n+                    isDaySelected: isWednesdaySelected,\r\n+                    dayColorChanged: (value) {\r\n+                      setState(() {\r\n+                        isWednesdaySelected = value;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                  DaySelectorWidget(\r\n+                    labelText: 'T',\r\n+                    isDaySelected: isThursDaySelected,\r\n+                    dayColorChanged: (value) {\r\n+                      setState(() {\r\n+                        isThursDaySelected = value;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                  DaySelectorWidget(\r\n+                    labelText: 'F',\r\n+                    isDaySelected: isFriDaySelected,\r\n+                    dayColorChanged: (value) {\r\n+                      setState(() {\r\n+                        isFriDaySelected = value;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                  DaySelectorWidget(\r\n+                    labelText: 'S',\r\n+                    isDaySelected: isSaturDaySelected,\r\n+                    dayColorChanged: (value) {\r\n+                      setState(() {\r\n+                        isSaturDaySelected = value;\r\n+                      });\r\n+                    },\r\n+                  ),\r\n+                ]);\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1644823989023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Text(\"Set Day and Time\"),\r\n-          \r\n+          daySelctionMethod()\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1644824002730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,84 +26,82 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Text(\"Set Day and Time\"),\r\n-          daySelctionMethod()\r\n+            daySelctionMethod(),\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n-\r\n-  Widget daySelctionMethod(){\r\n-\r\n-    return   Row(\r\n-                crossAxisAlignment: CrossAxisAlignment.center,\r\n-                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-                children: [\r\n-                  DaySelectorWidget(\r\n-                    labelText: 'S',\r\n-                    isDaySelected: isSundaySelected,\r\n-                    dayColorChanged: (value) {\r\n-                      setState(() {\r\n-                        isSundaySelected = value;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                  DaySelectorWidget(\r\n-                    labelText: 'M',\r\n-                    isDaySelected: isMondaySelected,\r\n-                    dayColorChanged: (value) {\r\n-                      setState(() {\r\n-                        isMondaySelected = value;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                  DaySelectorWidget(\r\n-                    labelText: 'T',\r\n-                    isDaySelected: isTuesdaySelected,\r\n-                    dayColorChanged: (value) {\r\n-                      setState(() {\r\n-                        isTuesdaySelected = value;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                  DaySelectorWidget(\r\n-                    labelText: 'W',\r\n-                    isDaySelected: isWednesdaySelected,\r\n-                    dayColorChanged: (value) {\r\n-                      setState(() {\r\n-                        isWednesdaySelected = value;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                  DaySelectorWidget(\r\n-                    labelText: 'T',\r\n-                    isDaySelected: isThursDaySelected,\r\n-                    dayColorChanged: (value) {\r\n-                      setState(() {\r\n-                        isThursDaySelected = value;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                  DaySelectorWidget(\r\n-                    labelText: 'F',\r\n-                    isDaySelected: isFriDaySelected,\r\n-                    dayColorChanged: (value) {\r\n-                      setState(() {\r\n-                        isFriDaySelected = value;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                  DaySelectorWidget(\r\n-                    labelText: 'S',\r\n-                    isDaySelected: isSaturDaySelected,\r\n-                    dayColorChanged: (value) {\r\n-                      setState(() {\r\n-                        isSaturDaySelected = value;\r\n-                      });\r\n-                    },\r\n-                  ),\r\n-                ]);\r\n+  Widget daySelctionMethod() {\r\n+    return Row(\r\n+        crossAxisAlignment: CrossAxisAlignment.center,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+        children: [\r\n+          DaySelectorWidget(\r\n+            labelText: 'S',\r\n+            isDaySelected: isSundaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isSundaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'M',\r\n+            isDaySelected: isMondaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isMondaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'T',\r\n+            isDaySelected: isTuesdaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isTuesdaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'W',\r\n+            isDaySelected: isWednesdaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isWednesdaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'T',\r\n+            isDaySelected: isThursDaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isThursDaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'F',\r\n+            isDaySelected: isFriDaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isFriDaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'S',\r\n+            isDaySelected: isSaturDaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isSaturDaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+        ]);\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644824260046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,17 @@\n           mainAxisAlignment: MainAxisAlignment.center,\r\n           crossAxisAlignment: CrossAxisAlignment.center,\r\n           children: [\r\n             Text(\"Set Day and Time\"),\r\n-            daySelctionMethod(),\r\n+            TextButton(\r\n+                onPressed: () {\r\n+                  showDialog(\r\n+                      context: context,\r\n+                      builder: (BuildContext context) {\r\n+                        return daySelctionMethod();\r\n+                      });\r\n+                },\r\n+                child: Text(\"click me\"))\r\n           ],\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1644824348295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,21 @@\n                 onPressed: () {\r\n                   showDialog(\r\n                       context: context,\r\n                       builder: (BuildContext context) {\r\n-                        return daySelctionMethod();\r\n+                        return Row(\r\n+                          children: [\r\n+                            DaySelectorWidget(\r\n+                              labelText: 'S',\r\n+                              isDaySelected: isSundaySelected,\r\n+                              dayColorChanged: (value) {\r\n+                                setState(() {\r\n+                                  isSundaySelected = value;\r\n+                                });\r\n+                              },\r\n+                            ),\r\n+                          ],\r\n+                        );\r\n                       });\r\n                 },\r\n                 child: Text(\"click me\"))\r\n           ],\r\n"
                },
                {
                    "date": 1644824422118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,20 +31,22 @@\n                 onPressed: () {\r\n                   showDialog(\r\n                       context: context,\r\n                       builder: (BuildContext context) {\r\n-                        return Row(\r\n-                          children: [\r\n-                            DaySelectorWidget(\r\n-                              labelText: 'S',\r\n-                              isDaySelected: isSundaySelected,\r\n-                              dayColorChanged: (value) {\r\n-                                setState(() {\r\n-                                  isSundaySelected = value;\r\n-                                });\r\n-                              },\r\n-                            ),\r\n-                          ],\r\n+                        return Material(\r\n+                          child: Row(\r\n+                            children: [\r\n+                              DaySelectorWidget(\r\n+                                labelText: 'S',\r\n+                                isDaySelected: isSundaySelected,\r\n+                                dayColorChanged: (value) {\r\n+                                  setState(() {\r\n+                                    isSundaySelected = value;\r\n+                                  });\r\n+                                },\r\n+                              ),\r\n+                            ],\r\n+                          ),\r\n                         );\r\n                       });\r\n                 },\r\n                 child: Text(\"click me\"))\r\n"
                },
                {
                    "date": 1644824509079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,22 +19,25 @@\n   bool isSaturDaySelected = false;\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      body: Center(\r\n-        child: Column(\r\n-          mainAxisAlignment: MainAxisAlignment.center,\r\n-          crossAxisAlignment: CrossAxisAlignment.center,\r\n-          children: [\r\n-            Text(\"Set Day and Time\"),\r\n-            TextButton(\r\n-                onPressed: () {\r\n-                  showDialog(\r\n-                      context: context,\r\n-                      builder: (BuildContext context) {\r\n-                        return Material(\r\n-                          child: Row(\r\n+    return \r\n+    \r\n+    \r\n+    MaterialApp(\r\n+      home: Scaffold(\r\n+        body: Center(\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n+            crossAxisAlignment: CrossAxisAlignment.center,\r\n+            children: [\r\n+              Text(\"Set Day and Time\"),\r\n+              TextButton(\r\n+                  onPressed: () {\r\n+                    showDialog(\r\n+                        context: context,\r\n+                        builder: (BuildContext context) {\r\n+                          return Row(\r\n                             children: [\r\n                               DaySelectorWidget(\r\n                                 labelText: 'S',\r\n                                 isDaySelected: isSundaySelected,\r\n@@ -44,14 +47,14 @@\n                                   });\r\n                                 },\r\n                               ),\r\n                             ],\r\n-                          ),\r\n-                        );\r\n-                      });\r\n-                },\r\n-                child: Text(\"click me\"))\r\n-          ],\r\n+                          );\r\n+                        });\r\n+                  },\r\n+                  child: Text(\"click me\"))\r\n+            ],\r\n+          ),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1644824720289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,20 +35,22 @@\n                   onPressed: () {\r\n                     showDialog(\r\n                         context: context,\r\n                         builder: (BuildContext context) {\r\n-                          return Row(\r\n-                            children: [\r\n-                              DaySelectorWidget(\r\n-                                labelText: 'S',\r\n-                                isDaySelected: isSundaySelected,\r\n-                                dayColorChanged: (value) {\r\n-                                  setState(() {\r\n-                                    isSundaySelected = value;\r\n-                                  });\r\n-                                },\r\n-                              ),\r\n-                            ],\r\n+                          return MaterialApp(\r\n+                            home: Row(\r\n+                              children: [\r\n+                                DaySelectorWidget(\r\n+                                  labelText: 'S',\r\n+                                  isDaySelected: isSundaySelected,\r\n+                                  dayColorChanged: (value) {\r\n+                                    setState(() {\r\n+                                      isSundaySelected = value;\r\n+                                    });\r\n+                                  },\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n                           );\r\n                         });\r\n                   },\r\n                   child: Text(\"click me\"))\r\n"
                },
                {
                    "date": 1644824825102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n                   onPressed: () {\r\n                     showDialog(\r\n                         context: context,\r\n                         builder: (BuildContext context) {\r\n-                          return MaterialApp(\r\n-                            home: Row(\r\n+                          return Scaffold(\r\n+                            body: Row(\r\n                               children: [\r\n                                 DaySelectorWidget(\r\n                                   labelText: 'S',\r\n                                   isDaySelected: isSundaySelected,\r\n"
                },
                {
                    "date": 1644824977511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n   Widget build(BuildContext context) {\r\n     return \r\n     \r\n     \r\n-    MaterialApp(\r\n-      home: Scaffold(\r\n+    Material(\r\n+    child: Scaffold(\r\n         body: Center(\r\n           child: Column(\r\n             mainAxisAlignment: MainAxisAlignment.center,\r\n             crossAxisAlignment: CrossAxisAlignment.center,\r\n@@ -35,10 +35,10 @@\n                   onPressed: () {\r\n                     showDialog(\r\n                         context: context,\r\n                         builder: (BuildContext context) {\r\n-                          return Scaffold(\r\n-                            body: Row(\r\n+                          return \r\n+                             Row(\r\n                               children: [\r\n                                 DaySelectorWidget(\r\n                                   labelText: 'S',\r\n                                   isDaySelected: isSundaySelected,\r\n@@ -49,9 +49,9 @@\n                                   },\r\n                                 ),\r\n                               ],\r\n                             ),\r\n-                          );\r\n+                          \r\n                         });\r\n                   },\r\n                   child: Text(\"click me\"))\r\n             ],\r\n"
                },
                {
                    "date": 1644825008598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,10 +48,10 @@\n                                     });\r\n                                   },\r\n                                 ),\r\n                               ],\r\n-                            ),\r\n-                          \r\n+                            );\r\n+                    \r\n                         });\r\n                   },\r\n                   child: Text(\"click me\"))\r\n             ],\r\n"
                },
                {
                    "date": 1644825625049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,28 +29,33 @@\n           child: Column(\r\n             mainAxisAlignment: MainAxisAlignment.center,\r\n             crossAxisAlignment: CrossAxisAlignment.center,\r\n             children: [\r\n-              Text(\"Set Day and Time\"),\r\n+             \r\n               TextButton(\r\n                   onPressed: () {\r\n                     showDialog(\r\n                         context: context,\r\n                         builder: (BuildContext context) {\r\n                           return \r\n-                             Row(\r\n-                              children: [\r\n-                                DaySelectorWidget(\r\n-                                  labelText: 'S',\r\n-                                  isDaySelected: isSundaySelected,\r\n-                                  dayColorChanged: (value) {\r\n-                                    setState(() {\r\n-                                      isSundaySelected = value;\r\n-                                    });\r\n-                                  },\r\n-                                ),\r\n-                              ],\r\n-                            );\r\n+                             Column(\r\n+                               children: [\r\n+                               Text(\"Set Day and Time\"),\r\n+                                 Row(\r\n+                                  children: [\r\n+                                    DaySelectorWidget(\r\n+                                      labelText: 'S',\r\n+                                      isDaySelected: isSundaySelected,\r\n+                                      dayColorChanged: (value) {\r\n+                                        setState(() {\r\n+                                          isSundaySelected = value;\r\n+                                        });\r\n+                                      },\r\n+                                    ),\r\n+                                  ],\r\n+                            ),\r\n+                               ],\r\n+                             );\r\n                     \r\n                         });\r\n                   },\r\n                   child: Text(\"click me\"))\r\n"
                },
                {
                    "date": 1644826039868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,10 @@\n   Widget build(BuildContext context) {\r\n     return \r\n     \r\n     \r\n-    Material(\r\n-    child: Scaffold(\r\n+    MaterialApp(\r\n+    home: Scaffold(\r\n         body: Center(\r\n           child: Column(\r\n             mainAxisAlignment: MainAxisAlignment.center,\r\n             crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1644826083431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,25 +36,27 @@\n                     showDialog(\r\n                         context: context,\r\n                         builder: (BuildContext context) {\r\n                           return \r\n-                             Column(\r\n-                               children: [\r\n-                               Text(\"Set Day and Time\"),\r\n-                                 Row(\r\n-                                  children: [\r\n-                                    DaySelectorWidget(\r\n-                                      labelText: 'S',\r\n-                                      isDaySelected: isSundaySelected,\r\n-                                      dayColorChanged: (value) {\r\n-                                        setState(() {\r\n-                                          isSundaySelected = value;\r\n-                                        });\r\n-                                      },\r\n-                                    ),\r\n-                                  ],\r\n-                            ),\r\n-                               ],\r\n+                             Material(\r\n+                               child: Column(\r\n+                                 children: [\r\n+                                 Text(\"Set Day and Time\"),\r\n+                                   Row(\r\n+                                    children: [\r\n+                                      DaySelectorWidget(\r\n+                                        labelText: 'S',\r\n+                                        isDaySelected: isSundaySelected,\r\n+                                        dayColorChanged: (value) {\r\n+                                          setState(() {\r\n+                                            isSundaySelected = value;\r\n+                                          });\r\n+                                        },\r\n+                                      ),\r\n+                                    ],\r\n+                                                         ),\r\n+                                 ],\r\n+                               ),\r\n                              );\r\n                     \r\n                         });\r\n                   },\r\n"
                },
                {
                    "date": 1644826473450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,46 +19,38 @@\n   bool isSaturDaySelected = false;\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return \r\n-    \r\n-    \r\n-    MaterialApp(\r\n-    home: Scaffold(\r\n+    return MaterialApp(\r\n+      home: Scaffold(\r\n         body: Center(\r\n           child: Column(\r\n             mainAxisAlignment: MainAxisAlignment.center,\r\n             crossAxisAlignment: CrossAxisAlignment.center,\r\n             children: [\r\n-             \r\n               TextButton(\r\n                   onPressed: () {\r\n                     showDialog(\r\n                         context: context,\r\n                         builder: (BuildContext context) {\r\n-                          return \r\n-                             Material(\r\n-                               child: Column(\r\n-                                 children: [\r\n-                                 Text(\"Set Day and Time\"),\r\n-                                   Row(\r\n-                                    children: [\r\n-                                      DaySelectorWidget(\r\n-                                        labelText: 'S',\r\n-                                        isDaySelected: isSundaySelected,\r\n-                                        dayColorChanged: (value) {\r\n-                                          setState(() {\r\n-                                            isSundaySelected = value;\r\n-                                          });\r\n-                                        },\r\n-                                      ),\r\n-                                    ],\r\n-                                                         ),\r\n-                                 ],\r\n-                               ),\r\n-                             );\r\n-                    \r\n+                          return Column(\r\n+                            children: [\r\n+                              Text(\"Set Day and Time\"),\r\n+                              Row(\r\n+                                children: [\r\n+                                  DaySelectorWidget(\r\n+                                    labelText: 'S',\r\n+                                    isDaySelected: isSundaySelected,\r\n+                                    dayColorChanged: (value) {\r\n+                                      setState(() {\r\n+                                        isSundaySelected = value;\r\n+                                      });\r\n+                                    },\r\n+                                  ),\r\n+                                ],\r\n+                              ),\r\n+                            ],\r\n+                          );\r\n                         });\r\n                   },\r\n                   child: Text(\"click me\"))\r\n             ],\r\n"
                },
                {
                    "date": 1644826621930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,21 +34,22 @@\n                         builder: (BuildContext context) {\r\n                           return Column(\r\n                             children: [\r\n                               Text(\"Set Day and Time\"),\r\n-                              Row(\r\n-                                children: [\r\n-                                  DaySelectorWidget(\r\n-                                    labelText: 'S',\r\n-                                    isDaySelected: isSundaySelected,\r\n-                                    dayColorChanged: (value) {\r\n-                                      setState(() {\r\n-                                        isSundaySelected = value;\r\n-                                      });\r\n-                                    },\r\n-                                  ),\r\n-                                ],\r\n-                              ),\r\n+                              daySelctionMethod()\r\n+                              // Row(\r\n+                              //   children: [\r\n+                              //     DaySelectorWidget(\r\n+                              //       labelText: 'S',\r\n+                              //       isDaySelected: isSundaySelected,\r\n+                              //       dayColorChanged: (value) {\r\n+                              //         setState(() {\r\n+                              //           isSundaySelected = value;\r\n+                              //         });\r\n+                              //       },\r\n+                              //     ),\r\n+                              //   ],\r\n+                              // ),\r\n                             ],\r\n                           );\r\n                         });\r\n                   },\r\n"
                },
                {
                    "date": 1644826682106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,74 +61,76 @@\n     );\r\n   }\r\n \r\n   Widget daySelctionMethod() {\r\n-    return Row(\r\n-        crossAxisAlignment: CrossAxisAlignment.center,\r\n-        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-        children: [\r\n-          DaySelectorWidget(\r\n-            labelText: 'S',\r\n-            isDaySelected: isSundaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isSundaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'M',\r\n-            isDaySelected: isMondaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isMondaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'T',\r\n-            isDaySelected: isTuesdaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isTuesdaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'W',\r\n-            isDaySelected: isWednesdaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isWednesdaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'T',\r\n-            isDaySelected: isThursDaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isThursDaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'F',\r\n-            isDaySelected: isFriDaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isFriDaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'S',\r\n-            isDaySelected: isSaturDaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isSaturDaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-        ]);\r\n+    return Material(\r\n+      child: Row(\r\n+          crossAxisAlignment: CrossAxisAlignment.center,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+          children: [\r\n+            DaySelectorWidget(\r\n+              labelText: 'S',\r\n+              isDaySelected: isSundaySelected,\r\n+              dayColorChanged: (value) {\r\n+                setState(() {\r\n+                  isSundaySelected = value;\r\n+                });\r\n+              },\r\n+            ),\r\n+            DaySelectorWidget(\r\n+              labelText: 'M',\r\n+              isDaySelected: isMondaySelected,\r\n+              dayColorChanged: (value) {\r\n+                setState(() {\r\n+                  isMondaySelected = value;\r\n+                });\r\n+              },\r\n+            ),\r\n+            DaySelectorWidget(\r\n+              labelText: 'T',\r\n+              isDaySelected: isTuesdaySelected,\r\n+              dayColorChanged: (value) {\r\n+                setState(() {\r\n+                  isTuesdaySelected = value;\r\n+                });\r\n+              },\r\n+            ),\r\n+            DaySelectorWidget(\r\n+              labelText: 'W',\r\n+              isDaySelected: isWednesdaySelected,\r\n+              dayColorChanged: (value) {\r\n+                setState(() {\r\n+                  isWednesdaySelected = value;\r\n+                });\r\n+              },\r\n+            ),\r\n+            DaySelectorWidget(\r\n+              labelText: 'T',\r\n+              isDaySelected: isThursDaySelected,\r\n+              dayColorChanged: (value) {\r\n+                setState(() {\r\n+                  isThursDaySelected = value;\r\n+                });\r\n+              },\r\n+            ),\r\n+            DaySelectorWidget(\r\n+              labelText: 'F',\r\n+              isDaySelected: isFriDaySelected,\r\n+              dayColorChanged: (value) {\r\n+                setState(() {\r\n+                  isFriDaySelected = value;\r\n+                });\r\n+              },\r\n+            ),\r\n+            DaySelectorWidget(\r\n+              labelText: 'S',\r\n+              isDaySelected: isSaturDaySelected,\r\n+              dayColorChanged: (value) {\r\n+                setState(() {\r\n+                  isSaturDaySelected = value;\r\n+                });\r\n+              },\r\n+            ),\r\n+          ]),\r\n+    );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644826741037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,115 +22,109 @@\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       home: Scaffold(\r\n         body: Center(\r\n-          child: Column(\r\n-            mainAxisAlignment: MainAxisAlignment.center,\r\n-            crossAxisAlignment: CrossAxisAlignment.center,\r\n-            children: [\r\n-              TextButton(\r\n-                  onPressed: () {\r\n-                    showDialog(\r\n-                        context: context,\r\n-                        builder: (BuildContext context) {\r\n-                          return Column(\r\n-                            children: [\r\n-                              Text(\"Set Day and Time\"),\r\n-                              daySelctionMethod()\r\n-                              // Row(\r\n-                              //   children: [\r\n-                              //     DaySelectorWidget(\r\n-                              //       labelText: 'S',\r\n-                              //       isDaySelected: isSundaySelected,\r\n-                              //       dayColorChanged: (value) {\r\n-                              //         setState(() {\r\n-                              //           isSundaySelected = value;\r\n-                              //         });\r\n-                              //       },\r\n-                              //     ),\r\n-                              //   ],\r\n-                              // ),\r\n-                            ],\r\n-                          );\r\n-                        });\r\n-                  },\r\n-                  child: Text(\"click me\"))\r\n-            ],\r\n-          ),\r\n+          child: TextButton(\r\n+              onPressed: () {\r\n+                showDialog(\r\n+                    context: context,\r\n+                    builder: (BuildContext context) {\r\n+                      return Material(\r\n+                        child: Column(\r\n+                          children: [\r\n+                            Text(\"Set Day and Time\"),\r\n+                            daySelctionMethod()\r\n+                            // Row(\r\n+                            //   children: [\r\n+                            //     DaySelectorWidget(\r\n+                            //       labelText: 'S',\r\n+                            //       isDaySelected: isSundaySelected,\r\n+                            //       dayColorChanged: (value) {\r\n+                            //         setState(() {\r\n+                            //           isSundaySelected = value;\r\n+                            //         });\r\n+                            //       },\r\n+                            //     ),\r\n+                            //   ],\r\n+                            // ),\r\n+                          ],\r\n+                        ),\r\n+                      );\r\n+                    });\r\n+              },\r\n+              child: Text(\"click me\")),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n   Widget daySelctionMethod() {\r\n-    return Material(\r\n-      child: Row(\r\n-          crossAxisAlignment: CrossAxisAlignment.center,\r\n-          mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-          children: [\r\n-            DaySelectorWidget(\r\n-              labelText: 'S',\r\n-              isDaySelected: isSundaySelected,\r\n-              dayColorChanged: (value) {\r\n-                setState(() {\r\n-                  isSundaySelected = value;\r\n-                });\r\n-              },\r\n-            ),\r\n-            DaySelectorWidget(\r\n-              labelText: 'M',\r\n-              isDaySelected: isMondaySelected,\r\n-              dayColorChanged: (value) {\r\n-                setState(() {\r\n-                  isMondaySelected = value;\r\n-                });\r\n-              },\r\n-            ),\r\n-            DaySelectorWidget(\r\n-              labelText: 'T',\r\n-              isDaySelected: isTuesdaySelected,\r\n-              dayColorChanged: (value) {\r\n-                setState(() {\r\n-                  isTuesdaySelected = value;\r\n-                });\r\n-              },\r\n-            ),\r\n-            DaySelectorWidget(\r\n-              labelText: 'W',\r\n-              isDaySelected: isWednesdaySelected,\r\n-              dayColorChanged: (value) {\r\n-                setState(() {\r\n-                  isWednesdaySelected = value;\r\n-                });\r\n-              },\r\n-            ),\r\n-            DaySelectorWidget(\r\n-              labelText: 'T',\r\n-              isDaySelected: isThursDaySelected,\r\n-              dayColorChanged: (value) {\r\n-                setState(() {\r\n-                  isThursDaySelected = value;\r\n-                });\r\n-              },\r\n-            ),\r\n-            DaySelectorWidget(\r\n-              labelText: 'F',\r\n-              isDaySelected: isFriDaySelected,\r\n-              dayColorChanged: (value) {\r\n-                setState(() {\r\n-                  isFriDaySelected = value;\r\n-                });\r\n-              },\r\n-            ),\r\n-            DaySelectorWidget(\r\n-              labelText: 'S',\r\n-              isDaySelected: isSaturDaySelected,\r\n-              dayColorChanged: (value) {\r\n-                setState(() {\r\n-                  isSaturDaySelected = value;\r\n-                });\r\n-              },\r\n-            ),\r\n-          ]),\r\n-    );\r\n+    return Row(\r\n+        crossAxisAlignment: CrossAxisAlignment.center,\r\n+        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+        children: [\r\n+          DaySelectorWidget(\r\n+            labelText: 'S',\r\n+            isDaySelected: isSundaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isSundaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'M',\r\n+            isDaySelected: isMondaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isMondaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'T',\r\n+            isDaySelected: isTuesdaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isTuesdaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'W',\r\n+            isDaySelected: isWednesdaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isWednesdaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'T',\r\n+            isDaySelected: isThursDaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isThursDaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'F',\r\n+            isDaySelected: isFriDaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isFriDaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+          DaySelectorWidget(\r\n+            labelText: 'S',\r\n+            isDaySelected: isSaturDaySelected,\r\n+            dayColorChanged: (value) {\r\n+              setState(() {\r\n+                isSaturDaySelected = value;\r\n+              });\r\n+            },\r\n+          ),\r\n+        ]);\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644826834564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n               onPressed: () {\r\n                 showDialog(\r\n                     context: context,\r\n                     builder: (BuildContext context) {\r\n-                      return Material(\r\n+                      return Center(\r\n                         child: Column(\r\n                           children: [\r\n                             Text(\"Set Day and Time\"),\r\n                             daySelctionMethod()\r\n"
                },
                {
                    "date": 1644827076014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,29 +27,33 @@\n               onPressed: () {\r\n                 showDialog(\r\n                     context: context,\r\n                     builder: (BuildContext context) {\r\n-                      return Center(\r\n+                      return AlertDialog(content: Center(\r\n                         child: Column(\r\n                           children: [\r\n                             Text(\"Set Day and Time\"),\r\n                             daySelctionMethod()\r\n-                            // Row(\r\n-                            //   children: [\r\n-                            //     DaySelectorWidget(\r\n-                            //       labelText: 'S',\r\n-                            //       isDaySelected: isSundaySelected,\r\n-                            //       dayColorChanged: (value) {\r\n-                            //         setState(() {\r\n-                            //           isSundaySelected = value;\r\n-                            //         });\r\n-                            //       },\r\n-                            //     ),\r\n-                            //   ],\r\n-                            // ),\r\n+                            Row(\r\n+                              children: [\r\n+                                DaySelectorWidget(\r\n+                                  labelText: 'S',\r\n+                                  isDaySelected: isSundaySelected,\r\n+                                  dayColorChanged: (value) {\r\n+                                    setState(() {\r\n+                                      isSundaySelected = value;\r\n+                                    });\r\n+                                  },\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n                           ],\r\n                         ),\r\n-                      );\r\n+                      ); ,);\r\n+                      \r\n+                      \r\n+                      \r\n+                      \r\n                     });\r\n               },\r\n               child: Text(\"click me\")),\r\n         ),\r\n"
                },
                {
                    "date": 1644827096482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,29 +27,28 @@\n               onPressed: () {\r\n                 showDialog(\r\n                     context: context,\r\n                     builder: (BuildContext context) {\r\n-                      return AlertDialog(content: Center(\r\n-                        child: Column(\r\n-                          children: [\r\n-                            Text(\"Set Day and Time\"),\r\n-                            daySelctionMethod()\r\n-                            Row(\r\n-                              children: [\r\n-                                DaySelectorWidget(\r\n-                                  labelText: 'S',\r\n-                                  isDaySelected: isSundaySelected,\r\n-                                  dayColorChanged: (value) {\r\n-                                    setState(() {\r\n-                                      isSundaySelected = value;\r\n-                                    });\r\n-                                  },\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ],\r\n-                        ),\r\n-                      ); ,);\r\n+                      return AlertDialog(content:\r\n+                       Column(\r\n+                         children: [\r\n+                           Text(\"Set Day and Time\"),\r\n+                           daySelctionMethod(),\r\n+                           Row(\r\n+                             children: [\r\n+                               DaySelectorWidget(\r\n+                                 labelText: 'S',\r\n+                                 isDaySelected: isSundaySelected,\r\n+                                 dayColorChanged: (value) {\r\n+                                   setState(() {\r\n+                                     isSundaySelected = value;\r\n+                                   });\r\n+                                 },\r\n+                               ),\r\n+                             ],\r\n+                           ),\r\n+                         ],\r\n+                       ); ,);\r\n                       \r\n                       \r\n                       \r\n                       \r\n"
                },
                {
                    "date": 1644827103647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                                ),\r\n                              ],\r\n                            ),\r\n                          ],\r\n-                       ); ,);\r\n+                       ),);\r\n                       \r\n                       \r\n                       \r\n                       \r\n"
                },
                {
                    "date": 1644827142470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n                       return AlertDialog(content:\r\n                        Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n-                           daySelctionMethod(),\r\n+                          // daySelctionMethod(),\r\n                            Row(\r\n                              children: [\r\n                                DaySelectorWidget(\r\n                                  labelText: 'S',\r\n"
                },
                {
                    "date": 1644827251881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,12 @@\n               onPressed: () {\r\n                 showDialog(\r\n                     context: context,\r\n                     builder: (BuildContext context) {\r\n-                      return AlertDialog(content:\r\n-                       Column(\r\n+                      return AlertDialog(\r\n+\r\n+                        actions: [daySelctionMethod()],\r\n+                     content:  Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n                           // daySelctionMethod(),\r\n                            Row(\r\n"
                },
                {
                    "date": 1644827447385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,9 @@\n                 showDialog(\r\n                     context: context,\r\n                     builder: (BuildContext context) {\r\n                       return AlertDialog(\r\n-\r\n-                        actions: [daySelctionMethod()],\r\n+  actions: [daySelctionMethod()],\r\n                      content:  Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n                           // daySelctionMethod(),\r\n"
                },
                {
                    "date": 1644827453079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n                 showDialog(\r\n                     context: context,\r\n                     builder: (BuildContext context) {\r\n                       return AlertDialog(\r\n-  actions: [daySelctionMethod()],\r\n+  \r\n                      content:  Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n                           // daySelctionMethod(),\r\n"
                },
                {
                    "date": 1644829607665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,8 @@\n                 showDialog(\r\n                     context: context,\r\n                     builder: (BuildContext context) {\r\n                       return AlertDialog(\r\n-  \r\n                      content:  Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n                           // daySelctionMethod(),\r\n"
                },
                {
                    "date": 1644829838896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,8 @@\n                        ),);\r\n                       \r\n                       \r\n                       \r\n-                      \r\n                     });\r\n               },\r\n               child: Text(\"click me\")),\r\n         ),\r\n"
                },
                {
                    "date": 1644829848024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,12 +47,9 @@\n                              ],\r\n                            ),\r\n                          ],\r\n                        ),);\r\n-                      \r\n-                      \r\n-                      \r\n-                    });\r\n+                                  });\r\n               },\r\n               child: Text(\"click me\")),\r\n         ),\r\n       ),\r\n"
                },
                {
                    "date": 1644830437172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,22 +31,22 @@\n                       return AlertDialog(\r\n                      content:  Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n-                          // daySelctionMethod(),\r\n-                           Row(\r\n-                             children: [\r\n-                               DaySelectorWidget(\r\n-                                 labelText: 'S',\r\n-                                 isDaySelected: isSundaySelected,\r\n-                                 dayColorChanged: (value) {\r\n-                                   setState(() {\r\n-                                     isSundaySelected = value;\r\n-                                   });\r\n-                                 },\r\n-                               ),\r\n-                             ],\r\n-                           ),\r\n+                         daySelctionMethod(),\r\n+                          //  Row(\r\n+                          //    children: [\r\n+                          //      DaySelectorWidget(\r\n+                          //        labelText: 'S',\r\n+                          //        isDaySelected: isSundaySelected,\r\n+                          //        dayColorChanged: (value) {\r\n+                          //          setState(() {\r\n+                          //            isSundaySelected = value;\r\n+                          //          });\r\n+                          //        },\r\n+                          //      ),\r\n+                          //    ],\r\n+                          //  ),\r\n                          ],\r\n                        ),);\r\n                                   });\r\n               },\r\n"
                },
                {
                    "date": 1644830546920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,21 +32,9 @@\n                      content:  Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n                          daySelctionMethod(),\r\n-                          //  Row(\r\n-                          //    children: [\r\n-                          //      DaySelectorWidget(\r\n-                          //        labelText: 'S',\r\n-                          //        isDaySelected: isSundaySelected,\r\n-                          //        dayColorChanged: (value) {\r\n-                          //          setState(() {\r\n-                          //            isSundaySelected = value;\r\n-                          //          });\r\n-                          //        },\r\n-                          //      ),\r\n-                          //    ],\r\n-                          //  ),\r\n+                        \r\n                          ],\r\n                        ),);\r\n                                   });\r\n               },\r\n"
                },
                {
                    "date": 1644830912802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,10 @@\n                      content:  Column(\r\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n                          daySelctionMethod(),\r\n+\r\n+                         \r\n                         \r\n                          ],\r\n                        ),);\r\n                                   });\r\n"
                },
                {
                    "date": 1644831890471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,9 @@\n                          children: [\r\n                            Text(\"Set Day and Time\"),\r\n                          daySelctionMethod(),\r\n \r\n-                         \r\n-                        \r\n+                          \r\n                          ],\r\n                        ),);\r\n                                   });\r\n               },\r\n@@ -44,9 +43,40 @@\n         ),\r\n       ),\r\n     );\r\n   }\r\n+//   showTimePicker() async{\r\n+//    TimeOfDay initialTime = TimeOfDay.now();\r\n+// TimeOfDay pickedTime = await showTimePicker(\r\n+//     context: context,\r\n+//     initialTime: initialTime,\r\n+//     builder: (BuildContext context, Widget child) {\r\n+//       return Directionality(\r\n+//         textDirection: TextDirection.rtl,\r\n+//         child: child,\r\n+//       );\r\n+//     },\r\n+// );\r\n+                    \r\n+//   }\r\n \r\n+\r\n+// Future<void> _selectTime(BuildContext context) async {\r\n+// var selectedTime;\r\n+// final TimeOfDay? picked_s = await showTimePicker(\r\n+//     context: context,\r\n+//     initialTime: selectedTime, builder: (BuildContext context, Widget child) {\r\n+//        return MediaQuery(\r\n+//          data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n+//         child: child,\r\n+//       );});\r\n+\r\n+// if (picked_s != null && picked_s != selectedTime )\r\n+//   setState(() {\r\n+//     selectedTime = picked_s;\r\n+//   });\r\n+// }\r\n+\r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n         mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n"
                },
                {
                    "date": 1644832582774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,29 +16,37 @@\n   bool isWednesdaySelected = false;\r\n   bool isThursDaySelected = false;\r\n   bool isFriDaySelected = false;\r\n   bool isSaturDaySelected = false;\r\n+  TimeOfDay selectedTime = TimeOfDay.now();\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       home: Scaffold(\r\n         body: Center(\r\n           child: TextButton(\r\n               onPressed: () {\r\n-                showDialog(\r\n-                    context: context,\r\n-                    builder: (BuildContext context) {\r\n-                      return AlertDialog(\r\n-                     content:  Column(\r\n-                         children: [\r\n-                           Text(\"Set Day and Time\"),\r\n-                         daySelctionMethod(),\r\n+//                 showTimePicker(context: context, initialTime: selectedTime ,\r\n+//                  builder: (BuildContext context , Widget child){\r\n \r\n+// return \r\n+//                 })\r\n+                // showDialog(\r\n+                //     context: context,\r\n+                //     builder: (BuildContext context) {\r\n+                //       return  showTimePicker(context: context, initialTime: initialTime);\r\n+                      \r\n+                //     //   AlertDialog(\r\n+                //     //  content:  Column(\r\n+                //     //      children: [\r\n+                //     //        Text(\"Set Day and Time\"),\r\n+                //     //      daySelctionMethod(),\r\n+\r\n                           \r\n-                         ],\r\n-                       ),);\r\n-                                  });\r\n+                //     //      ],\r\n+                //     //    ),);\r\n+                //                   });\r\n               },\r\n               child: Text(\"click me\")),\r\n         ),\r\n       ),\r\n@@ -64,17 +72,13 @@\n // var selectedTime;\r\n // final TimeOfDay? picked_s = await showTimePicker(\r\n //     context: context,\r\n //     initialTime: selectedTime, builder: (BuildContext context, Widget child) {\r\n-//        return MediaQuery(\r\n-//          data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n+//        return daySelctionMethod(),\r\n //         child: child,\r\n //       );});\r\n \r\n-// if (picked_s != null && picked_s != selectedTime )\r\n-//   setState(() {\r\n-//     selectedTime = picked_s;\r\n-//   });\r\n+\r\n // }\r\n \r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n"
                },
                {
                    "date": 1644833995385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,39 +16,45 @@\n   bool isWednesdaySelected = false;\r\n   bool isThursDaySelected = false;\r\n   bool isFriDaySelected = false;\r\n   bool isSaturDaySelected = false;\r\n-  TimeOfDay selectedTime = TimeOfDay.now();\r\n+TimeOfDay selectedTime = TimeOfDay.now();\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       home: Scaffold(\r\n         body: Center(\r\n-          child: TextButton(\r\n-              onPressed: () {\r\n+          child: Column(\r\n+            children: [\r\n+              TextButton(\r\n+                  onPressed: () {\r\n+\r\n+                    \r\n //                 showTimePicker(context: context, initialTime: selectedTime ,\r\n //                  builder: (BuildContext context , Widget child){\r\n \r\n // return \r\n //                 })\r\n-                // showDialog(\r\n-                //     context: context,\r\n-                //     builder: (BuildContext context) {\r\n-                //       return  showTimePicker(context: context, initialTime: initialTime);\r\n-                      \r\n-                //     //   AlertDialog(\r\n-                //     //  content:  Column(\r\n-                //     //      children: [\r\n-                //     //        Text(\"Set Day and Time\"),\r\n-                //     //      daySelctionMethod(),\r\n+                    // showDialog(\r\n+                    //     context: context,\r\n+                    //     builder: (BuildContext context) {\r\n+                    //       return  showTimePicker(context: context, initialTime: initialTime);\r\n+                          \r\n+                    //     //   AlertDialog(\r\n+                    //     //  content:  Column(\r\n+                    //     //      children: [\r\n+                    //     //        Text(\"Set Day and Time\"),\r\n+                    //     //      daySelctionMethod(),\r\n \r\n-                          \r\n-                //     //      ],\r\n-                //     //    ),);\r\n-                //                   });\r\n-              },\r\n-              child: Text(\"click me\")),\r\n+                              \r\n+                    //     //      ],\r\n+                    //     //    ),);\r\n+                    //                   });\r\n+                  },\r\n+                  child: Text(\"click me\")),\r\n+            ],\r\n+          ),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n@@ -67,20 +73,23 @@\n                     \r\n //   }\r\n \r\n \r\n-// Future<void> _selectTime(BuildContext context) async {\r\n-// var selectedTime;\r\n-// final TimeOfDay? picked_s = await showTimePicker(\r\n-//     context: context,\r\n-//     initialTime: selectedTime, builder: (BuildContext context, Widget child) {\r\n-//        return daySelctionMethod(),\r\n-//         child: child,\r\n-//       );});\r\n+Future<void> _selectTime(BuildContext context) async {\r\n+ var time  = await showTimePicker(\r\n+    context: context,\r\n+    initialTime: selectedTime, builder: (BuildContext context, Widget child) {\r\n+       return MediaQuery(\r\n+         data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n+        child: child,\r\n+      );});\r\n \r\n+if (picked_s != null && picked_s != selectedTime )\r\n+  setState(() {\r\n+    selectedTime = picked_s;\r\n+  });\r\n+}\r\n \r\n-// }\r\n-\r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n         mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n"
                },
                {
                    "date": 1644834941224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   bool isWednesdaySelected = false;\r\n   bool isThursDaySelected = false;\r\n   bool isFriDaySelected = false;\r\n   bool isSaturDaySelected = false;\r\n-TimeOfDay selectedTime = TimeOfDay.now();\r\n+TimeOfDay initialTime = TimeOfDay.now();\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n@@ -28,29 +28,14 @@\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n \r\n-                    \r\n-//                 showTimePicker(context: context, initialTime: selectedTime ,\r\n-//                  builder: (BuildContext context , Widget child){\r\n+                 showTimePicker(context: context, initialTime : TimeOfDay.now(), builder: (context , child){\r\n \r\n-// return \r\n-//                 })\r\n-                    // showDialog(\r\n-                    //     context: context,\r\n-                    //     builder: (BuildContext context) {\r\n-                    //       return  showTimePicker(context: context, initialTime: initialTime);\r\n-                          \r\n-                    //     //   AlertDialog(\r\n-                    //     //  content:  Column(\r\n-                    //     //      children: [\r\n-                    //     //        Text(\"Set Day and Time\"),\r\n-                    //     //      daySelctionMethod(),\r\n+return  DaySelector();\r\n+});   \r\n \r\n-                              \r\n-                    //     //      ],\r\n-                    //     //    ),);\r\n-                    //                   });\r\n+                   \r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n@@ -73,23 +58,9 @@\n                     \r\n //   }\r\n \r\n \r\n-Future<void> _selectTime(BuildContext context) async {\r\n- var time  = await showTimePicker(\r\n-    context: context,\r\n-    initialTime: selectedTime, builder: (BuildContext context, Widget child) {\r\n-       return MediaQuery(\r\n-         data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n-        child: child,\r\n-      );});\r\n \r\n-if (picked_s != null && picked_s != selectedTime )\r\n-  setState(() {\r\n-    selectedTime = picked_s;\r\n-  });\r\n-}\r\n-\r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n         mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n"
                },
                {
                    "date": 1644834956371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   bool isWednesdaySelected = false;\r\n   bool isThursDaySelected = false;\r\n   bool isFriDaySelected = false;\r\n   bool isSaturDaySelected = false;\r\n-TimeOfDay initialTime = TimeOfDay.now();\r\n+  TimeOfDay initialTime = TimeOfDay.now();\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n@@ -27,40 +27,23 @@\n           child: Column(\r\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n-\r\n-                 showTimePicker(context: context, initialTime : TimeOfDay.now(), builder: (context , child){\r\n-\r\n-return  DaySelector();\r\n-});   \r\n-\r\n-                   \r\n+                    showTimePicker(\r\n+                        context: context,\r\n+                        initialTime: TimeOfDay.now(),\r\n+                        builder: (context, child) {\r\n+                          return DaySelector();\r\n+                        });\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n-//   showTimePicker() async{\r\n-//    TimeOfDay initialTime = TimeOfDay.now();\r\n-// TimeOfDay pickedTime = await showTimePicker(\r\n-//     context: context,\r\n-//     initialTime: initialTime,\r\n-//     builder: (BuildContext context, Widget child) {\r\n-//       return Directionality(\r\n-//         textDirection: TextDirection.rtl,\r\n-//         child: child,\r\n-//       );\r\n-//     },\r\n-// );\r\n-                    \r\n-//   }\r\n \r\n-\r\n-\r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n         mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n"
                },
                {
                    "date": 1644835027050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n                     showTimePicker(\r\n                         context: context,\r\n                         initialTime: TimeOfDay.now(),\r\n                         builder: (context, child) {\r\n-                          return DaySelector();\r\n+                          return daySelctionMethod();\r\n                         });\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n"
                },
                {
                    "date": 1644835214492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,12 @@\n                   onPressed: () {\r\n                     showTimePicker(\r\n                         context: context,\r\n                         initialTime: TimeOfDay.now(),\r\n-                        builder: (context, child) {\r\n-                          return daySelctionMethod();\r\n-                        });\r\n+                        // builder: (context, child) {\r\n+                        //   return daySelctionMethod();\r\n+                        // }\r\n+                        );\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n"
                },
                {
                    "date": 1644835605939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,15 +27,17 @@\n           child: Column(\r\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n-                    showTimePicker(\r\n-                        context: context,\r\n-                        initialTime: TimeOfDay.now(),\r\n-                        // builder: (context, child) {\r\n-                        //   return daySelctionMethod();\r\n-                        // }\r\n-                        );\r\n+\r\n+                    showAboutDialog(context: context);\r\n+                    // showTimePicker(\r\n+                    //     context: context,\r\n+                    //     initialTime: TimeOfDay.now(),\r\n+                    //     // builder: (context, child) {\r\n+                    //     //   return daySelctionMethod();\r\n+                    //     // }\r\n+                    //     );\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n"
                },
                {
                    "date": 1644835706477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,33 @@\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n \r\n-                    showAboutDialog(context: context);\r\n-                    // showTimePicker(\r\n+showAlertDialog(BuildContext context) {\r\n+\r\n+  // set up the button\r\n+  Widget okButton = TextButton(\r\n+    child: Text(\"OK\"),\r\n+    onPressed: () { },\r\n+  );\r\n+\r\n+  // set up the AlertDialog\r\n+  AlertDialog alert = AlertDialog(\r\n+    title: Text(\"My title\"),\r\n+    content: Text(\"This is my message.\"),\r\n+    actions: [\r\n+      okButton,\r\n+    ],\r\n+  );\r\n+\r\n+  // show the dialog\r\n+  showDialog(\r\n+    context: context,\r\n+    builder: (BuildContext context) {\r\n+      return alert;\r\n+    },\r\n+  );\r\n+}                    // showTimePicker(\r\n                     //     context: context,\r\n                     //     initialTime: TimeOfDay.now(),\r\n                     //     // builder: (context, child) {\r\n                     //     //   return daySelctionMethod();\r\n"
                },
                {
                    "date": 1644836111492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,34 +27,41 @@\n           child: Column(\r\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n+return AlertDialog(content: \r\n+ Center(child: Container(\r\n+   height: 40,\r\n+   width: 40,\r\n+ ),));\r\n \r\n-showAlertDialog(BuildContext context) {\r\n \r\n-  // set up the button\r\n-  Widget okButton = TextButton(\r\n-    child: Text(\"OK\"),\r\n-    onPressed: () { },\r\n-  );\r\n+// showAlertDialog(BuildContext context) {\r\n \r\n-  // set up the AlertDialog\r\n-  AlertDialog alert = AlertDialog(\r\n-    title: Text(\"My title\"),\r\n-    content: Text(\"This is my message.\"),\r\n-    actions: [\r\n-      okButton,\r\n-    ],\r\n-  );\r\n+//   // set up the button\r\n+//   Widget okButton = TextButton(\r\n+//     child: Text(\"OK\"),\r\n+//     onPressed: () { },\r\n+//   );\r\n \r\n-  // show the dialog\r\n-  showDialog(\r\n-    context: context,\r\n-    builder: (BuildContext context) {\r\n-      return alert;\r\n-    },\r\n-  );\r\n-}                    // showTimePicker(\r\n+//   // set up the AlertDialog\r\n+//   AlertDialog alert = AlertDialog(\r\n+//     title: Text(\"My title\"),\r\n+//     content: \r\n+//     Text(\"This is my message.\"),\r\n+//     actions: [\r\n+//       okButton,\r\n+//     ],\r\n+//   );\r\n+\r\n+//   // show the dialog\r\n+//   showDialog(\r\n+//     context: context,\r\n+//     builder: (BuildContext context) {\r\n+//       return alert;\r\n+//     },\r\n+//   );\r\n+// }                    // showTimePicker(\r\n                     //     context: context,\r\n                     //     initialTime: TimeOfDay.now(),\r\n                     //     // builder: (context, child) {\r\n                     //     //   return daySelctionMethod();\r\n"
                },
                {
                    "date": 1644836205958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,12 +28,9 @@\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n return AlertDialog(content: \r\n- Center(child: Container(\r\n-   height: 40,\r\n-   width: 40,\r\n- ),));\r\n+ );\r\n \r\n \r\n // showAlertDialog(BuildContext context) {\r\n \r\n"
                },
                {
                    "date": 1644836401432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,12 +27,11 @@\n           child: Column(\r\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n-return AlertDialog(content: \r\n- );\r\n \r\n \r\n+\r\n // showAlertDialog(BuildContext context) {\r\n \r\n //   // set up the button\r\n //   Widget okButton = TextButton(\r\n"
                },
                {
                    "date": 1644836757732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,40 +30,15 @@\n                   onPressed: () {\r\n \r\n \r\n \r\n-// showAlertDialog(BuildContext context) {\r\n-\r\n-//   // set up the button\r\n-//   Widget okButton = TextButton(\r\n-//     child: Text(\"OK\"),\r\n-//     onPressed: () { },\r\n-//   );\r\n-\r\n-//   // set up the AlertDialog\r\n-//   AlertDialog alert = AlertDialog(\r\n-//     title: Text(\"My title\"),\r\n-//     content: \r\n-//     Text(\"This is my message.\"),\r\n-//     actions: [\r\n-//       okButton,\r\n-//     ],\r\n-//   );\r\n-\r\n-//   // show the dialog\r\n-//   showDialog(\r\n-//     context: context,\r\n-//     builder: (BuildContext context) {\r\n-//       return alert;\r\n-//     },\r\n-//   );\r\n-// }                    // showTimePicker(\r\n-                    //     context: context,\r\n-                    //     initialTime: TimeOfDay.now(),\r\n+                 showTimePicker(\r\n+                        context: context,\r\n+                        initialTime: TimeOfDay.now(),\r\n                     //     // builder: (context, child) {\r\n                     //     //   return daySelctionMethod();\r\n-                    //     // }\r\n-                    //     );\r\n+                        // }\r\n+                        );\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n"
                },
                {
                    "date": 1644837512204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,18 +27,15 @@\n           child: Column(\r\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n-\r\n-\r\n-\r\n-                 showTimePicker(\r\n-                        context: context,\r\n-                        initialTime: TimeOfDay.now(),\r\n-                    //     // builder: (context, child) {\r\n-                    //     //   return daySelctionMethod();\r\n-                        // }\r\n-                        );\r\n+                    showTimePicker(\r\n+                      context: context,\r\n+                      initialTime: TimeOfDay.now(),\r\n+                          // builder: (context, child) {\r\n+                          //   return daySelctionMethod();\r\n+                      }\r\n+                    );\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n"
                },
                {
                    "date": 1644837780973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,21 +30,45 @@\n                   onPressed: () {\r\n                     showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n-                          // builder: (context, child) {\r\n-                          //   return daySelctionMethod();\r\n-                      }\r\n-                    );\r\n-                  },\r\n+                          builder: (context, child) {\r\n+                            return  \r\n+                            \r\n+                            daySelctionMethod();\r\n+                            \r\n+                      },\r\n+                    \r\n+\r\n+                 \r\n+\r\n+\r\n+               \r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n+\r\n+\r\n+  Future<void> _selectTime(BuildContext context) async {\r\n+final TimeOfDay? picked_s = await showTimePicker(\r\n+    context: context,\r\n+    initialTime: selectedTime, builder: (context, child) {\r\n+       return MediaQuery(\r\n+         data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n+        child: child,\r\n+      );});\r\n+\r\n+if (picked_s != null && picked_s != selectedTime )\r\n+  setState(() {\r\n+    selectedTime = picked_s;\r\n+  });\r\n+}\r\n+\r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n         mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n"
                },
                {
                    "date": 1644838085828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,44 +30,42 @@\n                   onPressed: () {\r\n                     showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n-                          builder: (context, child) {\r\n-                            return  \r\n-                            \r\n-                            daySelctionMethod();\r\n-                            \r\n+                      builder: (context, child) {\r\n+                        \r\n+                       return \r\n+                           daySelctionMethod();\r\n+                     \r\n+                        \r\n                       },\r\n                     \r\n-\r\n-                 \r\n-\r\n-\r\n-               \r\n+                    );\r\n+                  },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n           ),\r\n         ),\r\n       ),\r\n     );\r\n   }\r\n \r\n-\r\n-\r\n   Future<void> _selectTime(BuildContext context) async {\r\n-final TimeOfDay? picked_s = await showTimePicker(\r\n-    context: context,\r\n-    initialTime: selectedTime, builder: (context, child) {\r\n-       return MediaQuery(\r\n-         data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n-        child: child,\r\n-      );});\r\n+    final TimeOfDay? picked_s = await showTimePicker(\r\n+        context: context,\r\n+        initialTime: selectedTime,\r\n+        builder: (context, child) {\r\n+          return MediaQuery(\r\n+            data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n+            child: child,\r\n+          );\r\n+        });\r\n \r\n-if (picked_s != null && picked_s != selectedTime )\r\n-  setState(() {\r\n-    selectedTime = picked_s;\r\n-  });\r\n-}\r\n+    if (picked_s != null && picked_s != selectedTime)\r\n+      setState(() {\r\n+        selectedTime = picked_s;\r\n+      });\r\n+  }\r\n \r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1644838167332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,12 @@\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n                         \r\n                        return \r\n-                           daySelctionMethod();\r\n+                            Directionality(\r\n+        textDirection: TextDirection.rtl,\r\n+        child: daySelctionMethod(),\r\n+      );\r\n                      \r\n                         \r\n                       },\r\n                     \r\n"
                },
                {
                    "date": 1644838179694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,24 +51,24 @@\n       ),\r\n     );\r\n   }\r\n \r\n-  Future<void> _selectTime(BuildContext context) async {\r\n-    final TimeOfDay? picked_s = await showTimePicker(\r\n-        context: context,\r\n-        initialTime: selectedTime,\r\n-        builder: (context, child) {\r\n-          return MediaQuery(\r\n-            data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n-            child: child,\r\n-          );\r\n-        });\r\n+  // Future<void> _selectTime(BuildContext context) async {\r\n+  //   final TimeOfDay? picked_s = await showTimePicker(\r\n+  //       context: context,\r\n+  //       initialTime: selectedTime,\r\n+  //       builder: (context, child) {\r\n+  //         return MediaQuery(\r\n+  //           data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n+  //           child: child,\r\n+  //         );\r\n+  //       });\r\n \r\n-    if (picked_s != null && picked_s != selectedTime)\r\n-      setState(() {\r\n-        selectedTime = picked_s;\r\n-      });\r\n-  }\r\n+  //   if (picked_s != null && picked_s != selectedTime)\r\n+  //     setState(() {\r\n+  //       selectedTime = picked_s;\r\n+  //     });\r\n+  // }\r\n \r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n"
                },
                {
                    "date": 1644838195948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,18 +31,13 @@\n                     showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n-                        \r\n-                       return \r\n-                            Directionality(\r\n-        textDirection: TextDirection.rtl,\r\n-        child: daySelctionMethod(),\r\n-      );\r\n-                     \r\n-                        \r\n+                        return Directionality(\r\n+                          textDirection: TextDirection.rtl,\r\n+                          child: daySelctionMethod(),\r\n+                        );\r\n                       },\r\n-                    \r\n                     );\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n@@ -51,25 +46,9 @@\n       ),\r\n     );\r\n   }\r\n \r\n-  // Future<void> _selectTime(BuildContext context) async {\r\n-  //   final TimeOfDay? picked_s = await showTimePicker(\r\n-  //       context: context,\r\n-  //       initialTime: selectedTime,\r\n-  //       builder: (context, child) {\r\n-  //         return MediaQuery(\r\n-  //           data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n-  //           child: child,\r\n-  //         );\r\n-  //       });\r\n \r\n-  //   if (picked_s != null && picked_s != selectedTime)\r\n-  //     setState(() {\r\n-  //       selectedTime = picked_s;\r\n-  //     });\r\n-  // }\r\n-\r\n   Widget daySelctionMethod() {\r\n     return Row(\r\n         crossAxisAlignment: CrossAxisAlignment.center,\r\n         mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n"
                },
                {
                    "date": 1644838253728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n                         return Directionality(\r\n                           textDirection: TextDirection.rtl,\r\n-                          child: daySelctionMethod(),\r\n+                          child: Text(\"data\"),\r\n                         );\r\n                       },\r\n                     );\r\n                   },\r\n"
                },
                {
                    "date": 1644838578022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,10 @@\n                     showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n-                        return Directionality(\r\n-                          textDirection: TextDirection.rtl,\r\n+                        return MediaQuery(\r\n+         data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n                           child: Text(\"data\"),\r\n                         );\r\n                       },\r\n                     );\r\n"
                },
                {
                    "date": 1644838737961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n                         return MediaQuery(\r\n          data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n-                          child: Text(\"data\"),\r\n+                          child:daySelctionMethod(),\r\n                         );\r\n                       },\r\n                     );\r\n                   },\r\n"
                },
                {
                    "date": 1644838765352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n     return MaterialApp(\r\n       home: Scaffold(\r\n         body: Center(\r\n           child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.center,\r\n             children: [\r\n               TextButton(\r\n                   onPressed: () {\r\n                     showTimePicker(\r\n"
                },
                {
                    "date": 1644838990044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,11 @@\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n                         return MediaQuery(\r\n-         data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: false),\r\n-                          child:daySelctionMethod(),\r\n+                          data: MediaQuery.of(context)\r\n+                              .copyWith(alwaysUse24HourFormat: false),\r\n+                          child: daySelctionMethod(),\r\n                         );\r\n                       },\r\n                     );\r\n                   },\r\n@@ -47,76 +48,79 @@\n       ),\r\n     );\r\n   }\r\n \r\n-\r\n   Widget daySelctionMethod() {\r\n-    return Row(\r\n-        crossAxisAlignment: CrossAxisAlignment.center,\r\n-        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-        children: [\r\n-          DaySelectorWidget(\r\n-            labelText: 'S',\r\n-            isDaySelected: isSundaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isSundaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'M',\r\n-            isDaySelected: isMondaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isMondaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'T',\r\n-            isDaySelected: isTuesdaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isTuesdaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'W',\r\n-            isDaySelected: isWednesdaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isWednesdaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'T',\r\n-            isDaySelected: isThursDaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isThursDaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'F',\r\n-            isDaySelected: isFriDaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isFriDaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-          DaySelectorWidget(\r\n-            labelText: 'S',\r\n-            isDaySelected: isSaturDaySelected,\r\n-            dayColorChanged: (value) {\r\n-              setState(() {\r\n-                isSaturDaySelected = value;\r\n-              });\r\n-            },\r\n-          ),\r\n-        ]);\r\n+    return Column(\r\n+      children: [\r\n+        Row(\r\n+            crossAxisAlignment: CrossAxisAlignment.center,\r\n+            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+            children: [\r\n+              DaySelectorWidget(\r\n+                labelText: 'S',\r\n+                isDaySelected: isSundaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSundaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'M',\r\n+                isDaySelected: isMondaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isMondaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'T',\r\n+                isDaySelected: isTuesdaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isTuesdaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'W',\r\n+                isDaySelected: isWednesdaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isWednesdaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'T',\r\n+                isDaySelected: isThursDaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isThursDaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'F',\r\n+                isDaySelected: isFriDaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isFriDaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+              DaySelectorWidget(\r\n+                labelText: 'S',\r\n+                isDaySelected: isSaturDaySelected,\r\n+                dayColorChanged: (value) {\r\n+                  setState(() {\r\n+                    isSaturDaySelected = value;\r\n+                  });\r\n+                },\r\n+              ),\r\n+            ]),\r\n+      ],\r\n+    );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644839099157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n           child: Column(\r\n             mainAxisAlignment: MainAxisAlignment.center,\r\n             children: [\r\n               TextButton(\r\n-                  onPressed: () {\r\n+                  onPressed: () async {\r\n                     showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n@@ -119,8 +119,19 @@\n                   });\r\n                 },\r\n               ),\r\n             ]),\r\n+\r\n+            //  showTimePicker(\r\n+            //           context: context,\r\n+            //           initialTime: TimeOfDay.now(),\r\n+            //           builder: (context, child) {\r\n+            //             return MediaQuery(\r\n+            //               data: MediaQuery.of(context)\r\n+            //                   .copyWith(alwaysUse24HourFormat: false),\r\n+            //               child: daySelctionMethod(),\r\n+            //             );\r\n+            //           },\r\n       ],\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1644839118327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             mainAxisAlignment: MainAxisAlignment.center,\r\n             children: [\r\n               TextButton(\r\n                   onPressed: () async {\r\n-                    showTimePicker(\r\n+                  await  showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n                       builder: (context, child) {\r\n                         return MediaQuery(\r\n"
                },
                {
                    "date": 1644839195546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n                       builder: (context, child) {\r\n                         return MediaQuery(\r\n                           data: MediaQuery.of(context)\r\n                               .copyWith(alwaysUse24HourFormat: false),\r\n-                          child: daySelctionMethod(),\r\n+                          // child: daySelctionMethod(),\r\n                         );\r\n                       },\r\n                     );\r\n                   },\r\n"
                },
                {
                    "date": 1644839206759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,15 +31,15 @@\n                   onPressed: () async {\r\n                   await  showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n-                      builder: (context, child) {\r\n-                        return MediaQuery(\r\n-                          data: MediaQuery.of(context)\r\n-                              .copyWith(alwaysUse24HourFormat: false),\r\n-                          // child: daySelctionMethod(),\r\n-                        );\r\n-                      },\r\n+                      // builder: (context, child) {\r\n+                      //   return MediaQuery(\r\n+                      //     data: MediaQuery.of(context)\r\n+                      //         .copyWith(alwaysUse24HourFormat: false),\r\n+                      //     // child: daySelctionMethod(),\r\n+                      //   );\r\n+                      // },\r\n                     );\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n"
                },
                {
                    "date": 1644839385109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,15 +31,19 @@\n                   onPressed: () async {\r\n                   await  showTimePicker(\r\n                       context: context,\r\n                       initialTime: TimeOfDay.now(),\r\n-                      // builder: (context, child) {\r\n-                      //   return MediaQuery(\r\n-                      //     data: MediaQuery.of(context)\r\n-                      //         .copyWith(alwaysUse24HourFormat: false),\r\n-                      //     // child: daySelctionMethod(),\r\n-                      //   );\r\n-                      // },\r\n+                        builder: (context, child) {\r\n+                          return MediaQuery(\r\n+                            data: MediaQuery.of(context)\r\n+                                .copyWith(alwaysUse24HourFormat: false),\r\n+                            child: Container(\r\n+                              height: 20,\r\n+                              width: 20,\r\n+                              color: Colors.red,\r\n+                            ),\r\n+                          );\r\n+                        },\r\n                     );\r\n                   },\r\n                   child: Text(\"click me\")),\r\n             ],\r\n"
                },
                {
                    "date": 1644839413807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,14 @@\n                         builder: (context, child) {\r\n                           return MediaQuery(\r\n                             data: MediaQuery.of(context)\r\n                                 .copyWith(alwaysUse24HourFormat: false),\r\n-                            child: Container(\r\n-                              height: 20,\r\n-                              width: 20,\r\n-                              color: Colors.red,\r\n+                            child: Center(\r\n+                              child: Container(\r\n+                                height: 20,\r\n+                                width: 20,\r\n+                                color: Colors.red,\r\n+                              ),\r\n                             ),\r\n                           );\r\n                         },\r\n                     );\r\n"
                },
                {
                    "date": 1644839634685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,9 @@\n                         builder: (context, child) {\r\n                           return MediaQuery(\r\n                             data: MediaQuery.of(context)\r\n                                 .copyWith(alwaysUse24HourFormat: false),\r\n-                            child: Center(\r\n-                              child: Container(\r\n-                                height: 20,\r\n-                                width: 20,\r\n-                                color: Colors.red,\r\n+                            child: daySelctionMethod()\r\n                               ),\r\n                             ),\r\n                           );\r\n                         },\r\n"
                },
                {
                    "date": 1644839644003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,11 @@\n                         builder: (context, child) {\r\n                           return MediaQuery(\r\n                             data: MediaQuery.of(context)\r\n                                 .copyWith(alwaysUse24HourFormat: false),\r\n-                            child: daySelctionMethod()\r\n-                              ),\r\n-                            ),\r\n+                            child: daySelctionMethod(),\r\n+                              \r\n+                            \r\n                           );\r\n                         },\r\n                     );\r\n                   },\r\n"
                }
            ],
            "date": 1644579998419,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass DaySelector extends StatefulWidget {\r\n  DaySelector({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<DaySelector> createState() => _DaySelectorState();\r\n}\r\n\r\nclass _DaySelectorState extends State<DaySelector> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}"
        }
    ]
}